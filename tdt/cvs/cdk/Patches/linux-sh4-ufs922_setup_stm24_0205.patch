--- a/drivers/stm/stx7100_comms.c	2011-05-23 19:00:00.000000000 +0100
+++ b/drivers/stm/stx7100_comms.c	2011-05-23 22:00:00.018479519 +0100
@@ -240,12 +240,12 @@
 			STM_PAD_PIO_BIDIR_NAMED(3, 0, 1, "SCL"),
 			STM_PAD_PIO_BIDIR_NAMED(3, 1, 1, "SDA"),
 		},
-		.sysconfs_num = 2,
+		.sysconfs_num = 1,
 		.sysconfs = (struct stm_pad_sysconf []) {
 			/* SSC1_MUX_SEL = 0 (default assignment) */
 			STM_PAD_SYS_CFG(7, 2, 2, 0),
 			/* DVO_OUT_ON = 0 (SSC not DVO) */
-			STM_PAD_SYS_CFG(7, 10, 10, 0),
+			//STM_PAD_SYS_CFG(7, 10, 10, 0),
 		},
 	},
 	[2] = {
@@ -344,7 +344,7 @@
 	BUG_ON(stx7100_ssc_configured[ssc]);
 	stx7100_ssc_configured[ssc] = 1;
 
-	stx7100_ssc_devices[ssc].name = "i2c-stm";
+	stx7100_ssc_devices[ssc].name = "i2c-st40";
 	stx7100_ssc_devices[ssc].id = i2c_busnum;
 
 	plat_data = stx7100_ssc_devices[ssc].dev.platform_data;
*** a/arch/sh/boards/mach-mb448/setup.c	2011-02-18 18:29:42.000000000 +0100
--- b/setup.c	2011-02-22 13:50:16.257336460 +0100
***************
*** 19,24 ****
--- 19,25 ----
  #include <linux/mtd/physmap.h>
  #include <linux/stm/platform.h>
  #include <linux/stm/stx7100.h>
+ #include <linux/bpa2.h>
  #include <asm/irl.h>
  
  
***************
*** 26,32 ****
--- 27,51 ----
  #define MB448_PIO_SMC91X_RESET stm_gpio(2, 6)
  #define MB448_PIO_FLASH_VPP stm_gpio(2, 7)
  
+ const char *LMI_VID_partalias[] = { "BPA2_Region1", "coredisplay-video", "gfx-memory", "v4l2-video-buffers", NULL };
+ const char *LMI_SYS_partalias[] = { "BPA2_Region0", "bigphysarea", "v4l2-coded-video-buffers", NULL };
  
+ static struct bpa2_partition_desc bpa2_parts_table[] = {
+       {
+ 	      .name  = "LMI_VID",
+ 	      .start = 0x10800000,
+ 	      .size  = 0x03800000,
+ 	      .flags = 0,
+ 	      .aka   = LMI_VID_partalias
+       },
+       {
+ 	      .name  = "LMI_SYS",
+ 	      .start = 0,
+ 	      .size  = 0x02600000,
+ 	      .flags = 0,
+ 	      .aka   = LMI_SYS_partalias
+       }
+ };
  
  void __init mb448_setup(char **cmdline_p)
  {
***************
*** 37,49 ****
  	stx7100_configure_asc(2, &(struct stx7100_asc_config) {
  			.hw_flow_control = 0,
  			.is_console = 1, });
! 	stx7100_configure_asc(3, &(struct stx7100_asc_config) {
! 			.hw_flow_control = 0,
! 			.is_console = 0, });
  }
  
- 
- 
  static struct resource mb448_smc91x_resources[] = {
  	[0] = {
  		.start	= 0xa2000300,
--- 56,65 ----
  	stx7100_configure_asc(2, &(struct stx7100_asc_config) {
  			.hw_flow_control = 0,
  			.is_console = 1, });
!  
!   	bpa2_init(bpa2_parts_table, ARRAY_SIZE(bpa2_parts_table));
  }
  
  static struct resource mb448_smc91x_resources[] = {
  	[0] = {
  		.start	= 0xa2000300,
***************
*** 68,74 ****
  
  static void mb448_set_vpp(struct map_info *info, int enable)
  {
! 	gpio_set_value(MB448_PIO_FLASH_VPP, enable);
  }
  
  static struct platform_device mb448_physmap_flash = {
--- 84,90 ----
  
  static void mb448_set_vpp(struct map_info *info, int enable)
  {
! //	gpio_set_value(MB448_PIO_FLASH_VPP, enable);
  }
  
  static struct platform_device mb448_physmap_flash = {
***************
*** 115,121 ****
  
  static struct platform_device *mb448_devices[] __initdata = {
  	&mb448_smc91x_device,
! 	&mb448_physmap_flash,
  	&mb448_phy_device,
  };
  
--- 131,137 ----
  
  static struct platform_device *mb448_devices[] __initdata = {
  	&mb448_smc91x_device,
! //fixme	&mb448_physmap_flash,
  	&mb448_phy_device,
  };
  
***************
*** 124,150 ****
  	stx7100_configure_sata();
  
  	stx7100_configure_ssc_i2c(0);
  	stx7100_configure_ssc_spi(1, NULL);
  	stx7100_configure_ssc_i2c(2);
  
  	stx7100_configure_usb();
  
  	stx7100_configure_ethernet(&(struct stx7100_ethernet_config) {
  			.mode = stx7100_ethernet_mode_mii,
! 			.ext_clk = 0,
  			.phy_bus = 0, });
  
! 	gpio_request(MB448_PIO_FLASH_VPP, "Flash VPP");
  	gpio_direction_output(MB448_PIO_FLASH_VPP, 0);
! 
! 	/* Reset the SMSC 91C111 Ethernet chip */
  	gpio_request(MB448_PIO_SMC91X_RESET, "SMC91x reset");
  	gpio_direction_output(MB448_PIO_SMC91X_RESET, 0);
  	udelay(1);
  	gpio_set_value(MB448_PIO_SMC91X_RESET, 1);
  	udelay(1);
  	gpio_set_value(MB448_PIO_SMC91X_RESET, 0);
! 
  	return platform_add_devices(mb448_devices,
  			ARRAY_SIZE(mb448_devices));
  }
--- 140,169 ----
  	stx7100_configure_sata();
  
  	stx7100_configure_ssc_i2c(0);
+ /*	
  	stx7100_configure_ssc_spi(1, NULL);
+ */
+ 	stx7100_configure_ssc_i2c(1);	
  	stx7100_configure_ssc_i2c(2);
  
  	stx7100_configure_usb();
  
  	stx7100_configure_ethernet(&(struct stx7100_ethernet_config) {
  			.mode = stx7100_ethernet_mode_mii,
! 			.ext_clk = 1,
  			.phy_bus = 0, });
  
! /*	gpio_request(MB448_PIO_FLASH_VPP, "Flash VPP");
  	gpio_direction_output(MB448_PIO_FLASH_VPP, 0);
! */
! 	/* Reset the SMSC 91C111 Ethernet chip 
  	gpio_request(MB448_PIO_SMC91X_RESET, "SMC91x reset");
  	gpio_direction_output(MB448_PIO_SMC91X_RESET, 0);
  	udelay(1);
  	gpio_set_value(MB448_PIO_SMC91X_RESET, 1);
  	udelay(1);
  	gpio_set_value(MB448_PIO_SMC91X_RESET, 0);
! */
  	return platform_add_devices(mb448_devices,
  			ARRAY_SIZE(mb448_devices));
  }
