--- linux/arch/sh/boards/st/stb7100ref/setup.c.hs5101	2010-03-31 23:34:12.000000000 +0200
+++ linux/arch/sh/boards/st/stb7100ref/setup.c	2010-03-31 23:34:02.000000000 +0200
@@ -108,7 +108,7 @@
 	unsigned long chip_revision, chip_7109;
 	static struct stpio_pin *usbpower, *ethreset;
 
-	printk("STMicroelectronics STb7100 Reference board initialisation\n");
+	printk("Homecast 5101 initialisation\n");
 
 	sysconf = ctrl_inl(SYSCONF_DEVICEID);
 	chip_7109 = (((sysconf >> 12) & 0x3ff) == 0x02c);
@@ -131,14 +131,6 @@
 
 	ctrl_outl(sysconf, SYSCONF_SYS_CFG(7));
 
-	/* Reset the SMSC 91C111 Ethernet chip */
-	ethreset = stpio_request_pin(2, 6, "SMSC_RST", STPIO_OUT);
-	stpio_set_pin(ethreset, 0);
-	stpio_set_pin(ethreset, 1);
-	stpio_set_pin(ethreset, 0);
-	udelay(1000);
-	stpio_set_pin(ethreset, 1);
-
 	/* The ST40RTC sources its clock from clock */
 	/* generator B */
 	sysconf = ctrl_inl(SYSCONF_SYS_CFG(8));
@@ -190,7 +182,7 @@
 
 const char *get_system_type(void)
 {
-	return "STb7100 Reference board";
+	return "Homecast 5101";
 }
 
 static struct resource ssc_resource[] = {
@@ -235,7 +227,7 @@
 static struct plat_ssc_data ssc_private_info = {
 	.capability  =
 		(SSC_I2C_CAPABILITY << (0*2)) |
-		(SSC_SPI_CAPABILITY << (1*2)) |
+		(SSC_I2C_CAPABILITY << (1*2)) |
 		(SSC_I2C_CAPABILITY << (2*2)),
 	.pio         = ssc_pio
 };
@@ -552,7 +544,7 @@
 
 static struct resource physmap_flash_resource = {
 	.start		= 0x00000000,
-	.end		= 0x00800000 - 1,
+	.end		= 0x00400000 - 1,
 	.flags		= IORESOURCE_MEM,
 };
 
@@ -943,9 +935,12 @@
 	}
 }
 
+static struct platform_device boxtype_device = {
+        .name = "boxtype",
+        .dev.platform_data = (void*)5101
+};
+
 static struct platform_device *stb7100ref_devices[] __initdata = {
-	//&smc91x_device,
-	&stb7109eth_device,
 	&st40_ohci_devices,
 	&st40_ehci_devices,
 	&lirc_device,
@@ -954,14 +949,13 @@
 	&ssc_device,
 	&rtc_device,
 	&stm_pwm_device,
-	//&physmap_flash,
-	&led_device,
 	&fdma_710x_device,
 	&alsa_710x_device_pcm0,
 	&alsa_710x_device_pcm1,
  	&alsa_710x_device_spdif,
 	&alsa_710x_device_cnv,
 	&alsa_710x_device_pcmin,
+	&boxtype_device,
 };
 
 
