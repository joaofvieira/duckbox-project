diff -Nur linux-sh4-2.6.23.17_stm23_0123_orig/drivers/net/smc91x.c linux-sh4/drivers/net/smc91x.c
--- linux-sh4-2.6.23.17_stm23_0123_orig/drivers/net/smc91x.c	2011-05-27 18:30:18.000000000 +0200
+++ linux-sh4/drivers/net/smc91x.c	2011-10-06 17:51:44.000000000 +0200
@@ -343,6 +343,10 @@
 	SMC_SELECT_BANK(0);
 	SMC_SET_RCR(RCR_SOFTRST);
 
+    	msleep(100); // d-mon
+    	SMC_SET_RCR(RCR_CLEAR);
+    	msleep(60);
+
 	/*
 	 * Setup the Configuration Register
 	 * This is necessary because the CONFIG_REG is not affected
@@ -382,6 +386,7 @@
 	SMC_SELECT_BANK(0);
 	SMC_SET_RCR(RCR_CLEAR);
 	SMC_SET_TCR(TCR_CLEAR);
+    	udelay(5); // d-mon
 
 	SMC_SELECT_BANK(1);
 	ctl = SMC_GET_CTL() | CTL_LE_ENABLE;
@@ -399,6 +404,7 @@
 
 	/* Reset the MMU */
 	SMC_SELECT_BANK(2);
+	udelay(5); // d-mon
 	SMC_SET_MMU_CMD(MC_RESET);
 	SMC_WAIT_MMU_BUSY();
 }
@@ -423,7 +429,9 @@
 	SMC_SET_MAC_ADDR(dev->dev_addr);
 
 	/* now, enable interrupts */
-	mask = IM_EPH_INT|IM_RX_OVRN_INT|IM_RCV_INT;
+	//mask = IM_EPH_INT|IM_RX_OVRN_INT|IM_RCV_INT;
+	mask = IM_ERCV_INT|IM_ALLOC_INT|IM_RCV_INT | IM_MDINT; // d-mon
+
 	if (lp->version >= (CHIP_91100 << 4))
 		mask |= IM_MDINT;
 	SMC_SELECT_BANK(2);
@@ -1197,11 +1205,15 @@
 	 * Enable PHY Interrupts (for register 18)
 	 * Interrupts listed here are disabled
 	 */
+	smc_phy_read(dev, phyaddr, PHY_INT_REG); // d-mon
+
 	smc_phy_write(dev, phyaddr, PHY_MASK_REG,
 		PHY_INT_LOSSSYNC | PHY_INT_CWRD | PHY_INT_SSD |
 		PHY_INT_ESD | PHY_INT_RPOL | PHY_INT_JAB |
 		PHY_INT_SPDDET | PHY_INT_DPLXDET);
-
+	smc_phy_read(dev, phyaddr, PHY_INT_REG); // d-mon
+	smc_phy_read(dev, phyaddr, PHY_INT_REG); // d-mon
+	
 	/* Configure the Receive/Phy Control register */
 	SMC_SELECT_BANK(0);
 	SMC_SET_RPC(lp->rpc_cur_mode);
diff -Nur linux-sh4-2.6.23.17_stm23_0123_orig/drivers/net/smc91x.h linux-sh4/drivers/net/smc91x.h
--- linux-sh4-2.6.23.17_stm23_0123_orig/drivers/net/smc91x.h	2011-05-27 18:30:16.000000000 +0200
+++ linux-sh4/drivers/net/smc91x.h	2011-10-06 17:57:30.000000000 +0200
@@ -47,6 +47,7 @@
 #define SMC_CAN_USE_32BIT	0
 #define SMC_NOWAIT		1
 
+
 /* The first two address lines aren't connected... */
 #define SMC_IO_SHIFT		2
 
@@ -278,17 +279,18 @@
  * to do a SMC_outl, which on a 16 bit bus translates into two 16 bit writes.
  * This bypasses the special logic which would prevent this also updating
  * this interrupt mask register. */
-#define SMC_CAN_USE_8BIT	1
+#define SMC_CAN_USE_8BIT	0
 #define SMC_CAN_USE_16BIT	1
 #define SMC_CAN_USE_32BIT	0
 #define SMC_CAN_USE_32BIT_DATA	1
-#define SMC_IO_SHIFT		0
+#define SMC_IO_SHIFT		14
 #else
 #error Unknown board
 #endif
 
-#define SMC_NOWAIT		0
+#define SMC_NOWAIT		1
 #define SMC_IRQ_FLAGS		0
+#undef  SMC_USE_PXA_DMA
 
 #ifdef SMC_STEM_BS_MASK
 /*
diff -Nur linux-sh4-2.6.23.17_stm23_0123_orig/drivers/net/stmmac/common.h linux-sh4/drivers/net/stmmac/common.h
--- linux-sh4-2.6.23.17_stm23_0123_orig/drivers/net/stmmac/common.h	2011-05-27 18:30:20.000000000 +0200
+++ linux-sh4/drivers/net/stmmac/common.h	2011-10-09 10:03:04.000000000 +0200
@@ -221,12 +221,21 @@
 	lo_addr = readl(ioaddr + low);
 
 	/* Extract the MAC address from the high and low words */
+#if 1
+	addr[0] = 0;
+	addr[1] = 0;
+	addr[2] = 0;
+	addr[3] = 0;
+	addr[4] = 0;
+	addr[5] = 0;
+#else
 	addr[0] = lo_addr & 0xff;
 	addr[1] = (lo_addr >> 8) & 0xff;
 	addr[2] = (lo_addr >> 16) & 0xff;
 	addr[3] = (lo_addr >> 24) & 0xff;
 	addr[4] = hi_addr & 0xff;
 	addr[5] = (hi_addr >> 8) & 0xff;
+#endif
 
 	return;
 }
diff -Nur linux-sh4-2.6.23.17_stm23_0123_orig/drivers/net/stmmac/stmmac_main.c linux-sh4/drivers/net/stmmac/stmmac_main.c
--- linux-sh4-2.6.23.17_stm23_0123_orig/drivers/net/stmmac/stmmac_main.c	2011-05-27 18:30:22.000000000 +0200
+++ linux-sh4/drivers/net/stmmac/stmmac_main.c	2011-10-09 10:03:04.000000000 +0200
@@ -1887,8 +1887,8 @@
 	stmmac_init_coalescence(priv->is_gmac, dev->mtu);
 
 	if (!is_valid_ether_addr(dev->dev_addr)) {
-		printk(KERN_WARNING "\tno valid MAC address; "
-		       "please, set using ifconfig or nwhwconfig!\n");
+		/*printk(KERN_WARNING "\tno valid MAC address; "
+		       "please, set using ifconfig or nwhwconfig!\n");*/
 	}
 
 	ret = register_netdev(dev);
