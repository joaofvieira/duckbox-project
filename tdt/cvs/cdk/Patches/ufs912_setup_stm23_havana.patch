diff --git a/arch/sh/boards/st/mb618/setup.c b/arch/sh/boards/st/mb618/setup.c
index 32a0f18..885706d 100644
--- a/arch/sh/boards/st/mb618/setup.c
+++ b/arch/sh/boards/st/mb618/setup.c
@@ -21,6 +21,9 @@
 #include <linux/mtd/mtd.h>
 #include <linux/mtd/physmap.h>
 #include <linux/mtd/partitions.h>
+//--->
+#include <linux/bpa2.h>
+//<---
 #include <linux/mtd/nand.h>
 #include <linux/phy.h>
 #include <linux/lirc.h>
@@ -33,6 +36,31 @@
 #include <asm/io.h>
 #include "../common/common.h"
 
+//--->
+const char *LMI_VID_partalias[] = { "BPA2_Region1", "coredisplay-video", "gfx-memory", "v4l2-video-buffers", NULL };
+const char *LMI_SYS_partalias[] = { "BPA2_Region0", "bigphysarea", "v4l2-coded-video-buffers", NULL };
+ 
+static struct bpa2_partition_desc bpa2_parts_table[] = {
+	{
+		.name  = "LMI_VID",
+		.start = 0x10800000,
+		.size  = 0x07800000,
+		.flags = 0,
+		.aka   = LMI_VID_partalias
+	},
+	{
+		.name  = "LMI_SYS",
+		.start = 0,
+/* let's take a look what we can take here. I think on ufs912
+ * we have enough sys and vid ;)
+ */
+		.size  = 0x01E00000,
+		.flags = 0,
+		.aka   = LMI_SYS_partalias
+	}
+};
+//<---
+
 /* Whether the hardware supports NOR or NAND Flash depends on J34.
  * In position 1-2 CSA selects NAND, in position 2-3 is selects NOR.
  * Note that J30A must be in position 2-3 to select the on board Flash
@@ -40,7 +68,7 @@
  */
 #define FLASH_NOR
 
-static int ascs[2] __initdata = { 2, 3 };
+static int ascs[2] __initdata = { 1 , 2 };
 
 static void __init mb618_setup(char** cmdline_p)
 {
@@ -48,6 +76,9 @@ static void __init mb618_setup(char** cmdline_p)
 
 	stx7111_early_device_init();
 	stx7111_configure_asc(ascs, 2, 0);
+//--->
+	bpa2_init(bpa2_parts_table, ARRAY_SIZE(bpa2_parts_table));
+//<---
 }
 
 static struct plat_stm_pwm_data pwm_private_info = {
@@ -56,7 +87,7 @@ static struct plat_stm_pwm_data pwm_private_info = {
 
 static struct plat_ssc_data ssc_private_info = {
 	.capability  =
-		ssc0_has(SSC_SPI_CAPABILITY) |
+		ssc0_has(SSC_I2C_CAPABILITY) | /** We have 4 x I2C Bus **/
 		ssc1_has(SSC_I2C_CAPABILITY) |
 		ssc2_has(SSC_I2C_CAPABILITY) |
 		ssc3_has(SSC_I2C_CAPABILITY),
@@ -350,7 +381,9 @@ static int __init device_init(void)
 	stx7111_configure_ethernet(1, 0, 0, 0);
         stx7111_configure_lirc(&lirc_scd);
 
+/** Ethernet needs this pin
 	vpp_pio = stpio_request_pin(3,4, "VPP", STPIO_OUT);
+**/
 
 #ifdef CONFIG_SND
 	i2c_register_board_info(1, &mb618_scart_audio, 1);
diff --git a/arch/sh/kernel/cpu/sh4/setup-stx7111.c b/arch/sh/kernel/cpu/sh4/setup-stx7111.c
index 58b34b6..7ba5d67 100644
--- a/arch/sh/kernel/cpu/sh4/setup-stx7111.c
+++ b/arch/sh/kernel/cpu/sh4/setup-stx7111.c
@@ -65,8 +65,10 @@ void __init stx7111_configure_usb(int inv_enable)
 	sc = sysconf_claim(SYS_CFG, 6, 29,29, "USB");
 	sysconf_write(sc, inv_enable);
 
+/** These are used by maruapp
 	pin = stpio_request_pin(5,6, "USBOC", STPIO_IN);
 	pin = stpio_request_pin(5,7, "USBPWR", STPIO_ALT_OUT);
+**/
 
 	platform_device_register(&st_usb);
 
@@ -394,7 +396,7 @@ static struct platform_device stm_stasc_devices[] = {
 		     1, 0, 1, 4, 5,
 		STPIO_ALT_OUT, STPIO_IN, STPIO_IN, STPIO_ALT_OUT), /* oe pin: 6 */
 	STASC_DEVICE(0xfd032000, evt2irq(0x1120), 13, 17,
-		     4, 3, 2, 4, 5,
+		     4, 3, 2, /** ETH0 PIN 4 **/ -1, 5,
 		STPIO_ALT_OUT, STPIO_IN, STPIO_IN, STPIO_ALT_OUT),
 	STASC_DEVICE(0xfd033000, evt2irq(0x1100), 14, 18,
 		     5, 0, 1, 2, 3,
diff --git a/drivers/net/stmmac/common.h b/drivers/net/stmmac/common.h
index 699ae61..9e93dd4 100644
--- a/drivers/net/stmmac/common.h
+++ b/drivers/net/stmmac/common.h
@@ -207,18 +207,87 @@ static inline void stmmac_set_mac_addr(unsigned long ioaddr, u8 addr[6],
 	return;
 }
 
+//--->
+#include <linux/ctype.h>
+
+static unsigned long simple_strtoul2(const char *cp,char **endp,unsigned int base)
+{
+	unsigned long result = 0,value;
+
+	if (*cp == '0') {
+		cp++;
+		if ((*cp == 'x') && isxdigit(cp[1])) {
+			base = 16;
+			cp++;
+		}
+		if (!base) {
+			base = 8;
+		}
+	}
+	if (!base) {
+		base = 10;
+	}
+	while (isxdigit(*cp) && (value = isdigit(*cp) ? *cp-'0' : (islower(*cp)
+	    ? toupper(*cp) : *cp)-'A'+10) < base) {
+		result = result*base + value;
+		cp++;
+	}
+	if (endp)
+		*endp = (char *)cp;
+	return result;
+}
+//<---
+
 /*
  * This function gets the hardware MAC address
  */
+//--->
+extern char g_env_mac[];
+//<---
 static inline void stmmac_get_mac_addr(unsigned long ioaddr,
 				unsigned char *addr, unsigned int high,
 				unsigned int low)
 {
 	unsigned int hi_addr, lo_addr;
 
+//--->
+	int env_size,reg,env_present=0, tmp_count;
+	char *s = NULL, *e;
+	unsigned char s_env_mac[64], v_env_mac[6];
+//<---
+
 	/* Read the MAC address from the hardware */
+/**
 	hi_addr = readl(ioaddr + high);
 	lo_addr = readl(ioaddr + low);
+**/
+//--->
+	env_size = 17;
+	memcpy(s_env_mac, g_env_mac, 17);
+
+	if (env_size > 0) {
+			env_present = 1;
+			s = s_env_mac;
+		}
+
+	//by doliyu ...patch for mac address write error!
+	for(tmp_count =0 ; tmp_count < 17; tmp_count++)
+	{
+		if(s_env_mac[tmp_count] == ' ')
+			s_env_mac[tmp_count]='0';
+		printk("s_env_mac[%d] = %c\n", tmp_count, s_env_mac[tmp_count]);
+	}
+	
+	for (reg = 0; reg < 6; ++reg) { /* turn string into mac value */
+		v_env_mac[reg] = s ? simple_strtoul2 (s, &e, 16) : 0;
+		if (s)
+			s = (*e) ? e + 1 : e;
+	}
+	
+	printk("get ether addr = %x, %x, %x, %x, %x, %x \n", v_env_mac[0],v_env_mac[1],v_env_mac[2],v_env_mac[3],v_env_mac[4],v_env_mac[5]);
+	hi_addr = (int)(v_env_mac[5]) <<8 | (int)(v_env_mac[4]);
+	lo_addr = (int)(v_env_mac[3]) << 24 | (int)(v_env_mac[2]) << 16 | (int)(v_env_mac[1]) <<8 | v_env_mac[0];
+//<---
 
 	/* Extract the MAC address from the high and low words */
 	addr[0] = lo_addr & 0xff;
diff --git a/drivers/net/stmmac/stmmac_main.c b/drivers/net/stmmac/stmmac_main.c
index 6ca67e2..a2a380d 100644
--- a/drivers/net/stmmac/stmmac_main.c
+++ b/drivers/net/stmmac/stmmac_main.c
@@ -2296,6 +2296,10 @@ static int __init stmmac_init_module(void)
 	return ret;
 }
 
+//--->
+char g_env_mac[] = "00:50:FD:00:00:00";
+//<---
+
 /**
  * stmmac_cleanup_module - Cleanup routine for the driver
  * Description: This function is the cleanup routine for the driver.
@@ -2348,6 +2352,11 @@ static int __init stmmac_cmdline_opt(char *str)
 			tmrate = simple_strtoul(opt + 7, NULL, 0);
 #endif
 		}
+//--->
+		else if( !strncmp(opt,"ethaddr:", 8)) {
+			memcpy(g_env_mac, opt + 8, 17);
+		}
+//<---
 	}
 	return 0;
 }
diff --git a/localversion-stm b/localversion-stm
index ec2b8d6..f0d32ea 100644
--- a/localversion-stm
+++ b/localversion-stm
@@ -1 +1 @@
-_stm23_0123
+_stm23_0119
