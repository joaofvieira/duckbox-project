diff -pcr linux-sh4-2.6.23.17_stm23_0123_setup/arch/sh/boards/st/pdk7105/setup.c linux-sh4-2.6.23.17_stm23_0123/arch/sh/boards/st/pdk7105/setup.c
*** linux-sh4-2.6.23.17_stm23_0123_setup/arch/sh/boards/st/pdk7105/setup.c	2011-05-16 15:45:01.707217657 +0800
--- linux-sh4-2.6.23.17_stm23_0123/arch/sh/boards/st/pdk7105/setup.c	2011-05-16 17:17:16.412907663 +0800
***************
*** 23,28 ****
--- 23,29 ----
  #include <linux/mtd/mtd.h>
  #include <linux/mtd/physmap.h>
  #include <linux/mtd/partitions.h>
+ #include <linux/bpa2.h>
  #include <linux/mtd/nand.h>
  #include <linux/stm/nand.h>
  #include <linux/spi/spi.h>
***************
*** 57,70 ****
   *
   */
  
! static int ascs[2] __initdata = { 2, 3 };
  
  static void __init pdk7105_setup(char** cmdline_p)
  {
  	printk("STMicroelectronics PDK7105-SDK board initialisation\n");
  
  	stx7105_early_device_init();
! 	stx7105_configure_asc(ascs, 2, 0);
  }
  
  static struct plat_stm_pwm_data pwm_private_info = {
--- 58,100 ----
   *
   */
  
! const char *LMI_IO_partalias[] = { "v4l2-coded-video-buffers", "BPA2_Region1", "v4l2-video-buffers" ,
!                                     "coredisplay-video", "gfx-memory", "BPA2_Region0", "LMI_VID", NULL };
! 
! /*
! 0x40000000 - 0x403FFFFF - cocpu 1 ram (4mb)
! 0x40400000 - 0x407FFFFF - cocpu 2 ram (4mb)
! 0x40800000 - 0x47FFFFFF - linux   (120mb)
! 0x48000000 - 0x49FFFFFF - bigphys ( 32mb)
! 0x4A000000 - 0x4FFFFFFF - lmi_io  ( 96mb)
! */
! static struct bpa2_partition_desc bpa2_parts_table[] = {
!     {
!  	    .name  = "bigphysarea",
!  	    .start = 0x48000000,
!  	    .size  = 0x02000000, /* 32 Mb */
!  	    .flags = 0,
!  	    .aka   = NULL
!     },
!     {
!  	    .name  = "LMI_IO",
!  	    .start = 0x4A000000,
!  	    .size  = 0x06000000, /* 92 Mb */
!  	    .flags = 0,
!  	    .aka   = LMI_IO_partalias
!     },
!  };
! 
! 
! static int ascs[1] __initdata = { 2 | (STASC_FLAG_NORTSCTS << 8)};
  
  static void __init pdk7105_setup(char** cmdline_p)
  {
  	printk("STMicroelectronics PDK7105-SDK board initialisation\n");
  
  	stx7105_early_device_init();
! 	stx7105_configure_asc(ascs, 1, 0);
!    	bpa2_init(bpa2_parts_table, ARRAY_SIZE(bpa2_parts_table));
  }
  
  static struct plat_stm_pwm_data pwm_private_info = {
*************** static struct platform_device pdk7105_ph
*** 198,219 ****
  		.platform_data = &phy_private_data,
  	}
  };
! 
! static struct mtd_partition mtd_parts_table[3] = {
  	{
! 		.name = "Boot firmware",
  		.size = 0x00040000,
  		.offset = 0x00000000,
  	}, {
  		.name = "Kernel",
! 		.size = 0x00200000,
  		.offset = 0x00040000,
  	}, {
! 		.name = "Root FS",
! 		.size = MTDPART_SIZ_FULL,
! 		.offset = 0x00240000,
  	}
  };
  
  static struct physmap_flash_data pdk7105_physmap_flash_data = {
  	.width		= 2,
--- 228,306 ----
  		.platform_data = &phy_private_data,
  	}
  };
! #ifdef FUP_CAN_FLASH_CONFIG
! static struct mtd_partition mtd_parts_table[8] = {
  	{
! 		.name = "U-BOOT",
  		.size = 0x00040000,
  		.offset = 0x00000000,
  	}, {
  		.name = "Kernel",
! 		.size = 0x00300000,
! 		.offset = 0x00100000,
! 	}, {
! 		.name = "FW",
! 		.size = 0x006E0000,
! 		.offset = 0x00B20000,
! 	}, {
! 		.name = "EXT2",
! 		.size = 0x00BE0000,
! 		.offset = 0x01220000,
! 	}, {
! 		.name = "ROOT",
! 		.size = 0x0021E0000,
! 		.offset = 0x01E20000,
! 	}, {
! 		.name = "EXT1",
! 		.size = 0x006E0000,
! 		.offset = 0x00420000,
! 	}, {
! 		.name = "U-BOOT ENV",
! 		.size = 0x00020000,
  		.offset = 0x00040000,
  	}, {
!  		.name = "Full",
!  		.size = MTDPART_SIZ_FULL,
! 		.offset = 0x00100000,
  	}
  };
+ #else
+ static struct mtd_partition mtd_parts_table[8] = {
+ 	{
+ 		.name = "U-BOOT",
+ 		.size = 0x00040000,
+ 		.offset = 0x00000000,
+ 	}, {
+ 		.name = "Kernel",
+ 		.size = 0x00300000,
+ 		.offset = 0x00100000,
+ 	}, {
+ 		.name = "FW",
+ 		.size = 0x006E0000,
+ 		.offset = 0x00B20000,
+ 	}, {
+ 		.name = "VAR",
+ 		.size = 0x00BC0000,
+ 		.offset = 0x01220000,
+ 	}, {
+ 		.name = "ROOT",
+ 		.size = 0x001E00000,
+ 		.offset = 0x02200000,
+ 	}, {
+ 		.name = "SWAP (VOLATILE)",
+ 		.size = 0x006E0000,
+ 		.offset = 0x00420000,
+ 	}, {
+ 		.name = "U-BOOT ENV",
+ 		.size = 0x00020000,
+ 		.offset = 0x00040000,
+ 	}, {
+  		.name = "Full",
+  		.size = MTDPART_SIZ_FULL,
+  		.offset = 0x00100000,
+ 	}
+ };
+ #endif
  
  static struct physmap_flash_data pdk7105_physmap_flash_data = {
  	.width		= 2,
*************** static struct platform_device spi_pio_de
*** 283,288 ****
--- 370,376 ----
  	},
  };
  /* Configuration for NAND Flash */
+ #if 0 //YWDRIVER_MODI lwj modify begin
  static struct mtd_partition nand_parts[] = {
  	{
  		.name   = "NAND root",
*************** static struct mtd_partition nand_parts[]
*** 294,300 ****
--- 382,415 ----
  		.size   = MTDPART_SIZ_FULL
  	},
  };
+ #else
+ static struct mtd_partition nand_parts[] = {
+     {
+ 		.name	= "uboot",
+ 		.offset	= 0,
+ 		.size 	= 0x00100000 //1M  //uboot boot mode
+ 	},
+ 	{
+ 		.name	= "Spark kernel",
+ 		.offset	= 0x00100000,
+ 		.size 	= 0x00700000 //7M
+ 	}, {
+ 		.name	= "Spark Userfs",
+ 		.offset	= 0x00800000,
+ 		.size	= 0x17800000  //376M
+ 	}, {
+ 		.name	= "E2 kernel",
+ 		.offset	= 0x18000000,
+ 		.size	= 0x00800000 //8M
+ 	}, {
+ 		.name	= "E2 Userfs",
+ 		.offset	= 0x18800000,
+ 		.size	= 0x07700000 //119M	cc changed reserved 1024KB for u-boot bbt
+ 	}
+ };
  
+ #endif
+ //YWDRIVER_MODI lwj modify end
  static struct plat_stmnand_data nand_config = {
  	/* STM_NAND_EMI data */
  	.emi_withinbankoffset   = 0,
*************** static struct plat_stmnand_data nand_con
*** 317,333 ****
  
  /* Platform data for STM_NAND_EMI/FLEX/AFM. (bank# may be updated later) */
  static struct platform_device nand_device =
  STM_NAND_DEVICE("stm-nand-flex", 2, &nand_config,
  		nand_parts, ARRAY_SIZE(nand_parts), NAND_USE_FLASH_BBT);
! 
  
  
  static struct platform_device *pdk7105_devices[] __initdata = {
! 	&pdk7105_physmap_flash,
! 	&pdk7105_leds,
! 	&pdk7105_front_panel,
  	&pdk7105_phy_device,
! 	&spi_pio_device[0],
  };
  
  /* Configuration based on Futarque-RC signals train. */
--- 432,452 ----
  
  /* Platform data for STM_NAND_EMI/FLEX/AFM. (bank# may be updated later) */
  static struct platform_device nand_device =
+ #if 0 //YWDRIVER_MODI lwj change begin
  STM_NAND_DEVICE("stm-nand-flex", 2, &nand_config,
  		nand_parts, ARRAY_SIZE(nand_parts), NAND_USE_FLASH_BBT);
! #else
! STM_NAND_DEVICE("stm-nand-flex", 0, &nand_config,
! 		nand_parts, ARRAY_SIZE(nand_parts), NAND_USE_FLASH_BBT);  //YWDRIVER_MODI lwj change 2 to 0,for NAND is in Bank0
! #endif
  
  
  static struct platform_device *pdk7105_devices[] __initdata = {
! 	//&pdk7105_physmap_flash,  //YWDRIVER_MODI lwj remove , we don't need nor flash
! /*	&pdk7105_leds,
! 	&pdk7105_front_panel,*/
  	&pdk7105_phy_device,
! /* &spi_pio_device[0],*/
  };
  
  /* Configuration based on Futarque-RC signals train. */
*************** static int __init device_init(void)
*** 390,395 ****
--- 509,515 ----
  		nand_device.id = 0;
  	}
  
+ #ifdef USE_IT
  	/* Setup the PCI_SERR# PIO */
  	if (gpio_request(PDK7105_GPIO_PCI_SERR, "PCI_SERR#") == 0) {
  		gpio_direction_input(PDK7105_GPIO_PCI_SERR);
*************** static int __init device_init(void)
*** 400,408 ****
  		printk(KERN_WARNING "pdk7105: Failed to claim PCI SERR PIO!\n");
  	}
  	stx7105_configure_pci(&pdk7105_pci_config);
  
  	stx7105_configure_sata(0);
! 	stx7105_configure_pwm(&pwm_private_info);
  	stx7105_configure_ssc(&ssc_private_info);
  
  	/*
--- 520,529 ----
  		printk(KERN_WARNING "pdk7105: Failed to claim PCI SERR PIO!\n");
  	}
  	stx7105_configure_pci(&pdk7105_pci_config);
+ #endif
  
  	stx7105_configure_sata(0);
! /*	stx7105_configure_pwm(&pwm_private_info);*/
  	stx7105_configure_ssc(&ssc_private_info);
  
  	/*
*************** static int __init device_init(void)
*** 419,439 ****
  	stx7105_configure_usb(0, &usb_init[0]);
  	stx7105_configure_usb(1, &usb_init[1]);
  
! 	phy_reset_pin = stpio_request_set_pin(15, 5, "eth_phy_reset",
  					      STPIO_OUT, 1);
  	stx7105_configure_ethernet(0, stx7105_ethernet_mii, 0, 0, 0, 0);
! 	stx7105_configure_lirc(&lirc_scd);
  	stx7105_configure_audio_pins(0, 0, 1, 0);
! 
  	/*
  	 * FLASH_WP is shared by NOR and NAND.  However, since MTD NAND has no
  	 * concept of WP/VPP, we must permanently enable it
  	 */
! 	stpio_request_set_pin(6, 4, "FLASH_WP", STPIO_OUT, 1);
  
  	stx7105_configure_nand(&nand_device);
- 	spi_register_board_info(spi_serialflash, ARRAY_SIZE(spi_serialflash));
  
  	return platform_add_devices(pdk7105_devices, ARRAY_SIZE(pdk7105_devices));
  }
  arch_initcall(device_init);
--- 540,562 ----
  	stx7105_configure_usb(0, &usb_init[0]);
  	stx7105_configure_usb(1, &usb_init[1]);
  
! 	phy_reset_pin = stpio_request_set_pin(5, 7, "eth_phy_reset",
  					      STPIO_OUT, 1);
  	stx7105_configure_ethernet(0, stx7105_ethernet_mii, 0, 0, 0, 0);
! 	stx7105_configure_lirc(&lirc_scd);/*
  	stx7105_configure_audio_pins(0, 0, 1, 0);
! */
  	/*
  	 * FLASH_WP is shared by NOR and NAND.  However, since MTD NAND has no
  	 * concept of WP/VPP, we must permanently enable it
  	 */
! 	 stpio_request_set_pin(6, 4, "FLASH_WP", STPIO_OUT, 1);
  
  	stx7105_configure_nand(&nand_device);
  
+     #if 0 //YWDRIVER_MODI lwj remove , don't need SPI flash
+ 	spi_register_board_info(spi_serialflash, ARRAY_SIZE(spi_serialflash));
+     #endif
  	return platform_add_devices(pdk7105_devices, ARRAY_SIZE(pdk7105_devices));
  }
  arch_initcall(device_init);
diff -pcr linux-sh4-2.6.23.17_stm23_0123_setup/arch/sh/kernel/cpu/sh4/sata-init.c linux-sh4-2.6.23.17_stm23_0123/arch/sh/kernel/cpu/sh4/sata-init.c
*** linux-sh4-2.6.23.17_stm23_0123_setup/arch/sh/kernel/cpu/sh4/sata-init.c	2011-05-16 15:45:01.719744570 +0800
--- linux-sh4-2.6.23.17_stm23_0123/arch/sh/kernel/cpu/sh4/sata-init.c	2011-05-25 10:33:57.699061000 +0800
*************** static void __init SATA_JTAG_DR_Write_MI
*** 290,295 ****
--- 290,296 ----
  
  static void __init SATA_JTAG_MIPHY_Start_Lane0(struct stm_sata_miphy *miphy)
  {
+     int Timeout = 0; //YWDRIVER_MODI lwj add 
  	SATA_JTAG_IR_Select_MIPHY(miphy, 0);
  
  	/* Force Macro1 in reset and request PLL calibration reset */
*************** static void __init SATA_JTAG_MIPHY_Start
*** 311,319 ****
  	SATA_JTAG_DR_Write_MIPHY(miphy, 0, 0x12, 0x00);
  
  	/* Wait for HFC_READY = 0 */
  	while (SATA_JTAG_DR_Read_MIPHY(miphy, 0, 0x1) & 0x3)
  		;
! 
  	/* Restart properly Process compensation & PLL Calibration */
  
  	/* Set properly comsr definition for 30 MHz ref clock */
--- 312,331 ----
  	SATA_JTAG_DR_Write_MIPHY(miphy, 0, 0x12, 0x00);
  
  	/* Wait for HFC_READY = 0 */
+     #if 0  //YWDRIVER_MODI lwj modify
  	while (SATA_JTAG_DR_Read_MIPHY(miphy, 0, 0x1) & 0x3)
  		;
!     #else
!     while (SATA_JTAG_DR_Read_MIPHY(miphy, 0, 0x1) & 0x3 )
!     {
!         Timeout++;
!         if(Timeout == 5)
!         {
!             break;
!         }
!         msleep(10);
!     }
!     #endif
  	/* Restart properly Process compensation & PLL Calibration */
  
  	/* Set properly comsr definition for 30 MHz ref clock */
*************** static void __init SATA_JTAG_MIPHY_Start
*** 337,344 ****
--- 349,369 ----
  	SATA_JTAG_DR_Write_MIPHY(miphy, 0, 0x40, 0x13);
  
  	/* Wait for comzc & comsr done */
+     #if 0  //YWDRIVER_MODI lwj modify
  	while ((SATA_JTAG_DR_Read_MIPHY(miphy, 0, 0x40) & 0xC) != 0xC)
  		;
+     #else
+     Timeout = 0;
+ 	while ((SATA_JTAG_DR_Read_MIPHY(miphy, 0, 0x40) & 0xC) != 0xC)
+     {
+         Timeout++;
+         if(Timeout == 5)
+         {
+             break;
+         }
+         msleep(10);
+     }
+     #endif
  
  	/* Recommended settings for swing & slew rate FOR SATA GEN 1
  	 * from CPG */
*************** static void __init SATA_JTAG_MIPHY_Start
*** 357,364 ****
--- 382,402 ----
  
  	/*  Wait for phy_ready */
  	/*  When phy is in ready state ( register 0x01 of macro1 to 0x13) */
+     #if 0  //YWDRIVER_MODI lwj modify
  	while ((SATA_JTAG_DR_Read_MIPHY(miphy, 0, 0x01) & 0x03) != 0x03)
  		;
+     #else
+     Timeout = 0;
+ 	while ((SATA_JTAG_DR_Read_MIPHY(miphy, 0, 0x01) & 0x03) != 0x03)
+     {
+         Timeout++;
+         if(Timeout == 5)
+         {
+             break;
+         }
+         msleep(10);
+     }
+     #endif
  
  	/* Enable macro1 to use rx_lspd  & tx_lspd from link interface */
  	SATA_JTAG_DR_Write_MIPHY(miphy, 0, 0x10, 0x00);
diff -pcr linux-sh4-2.6.23.17_stm23_0123_setup/arch/sh/kernel/cpu/sh4/setup-stx7105.c linux-sh4-2.6.23.17_stm23_0123/arch/sh/kernel/cpu/sh4/setup-stx7105.c
*** linux-sh4-2.6.23.17_stm23_0123_setup/arch/sh/kernel/cpu/sh4/setup-stx7105.c	2011-05-16 15:45:01.724912856 +0800
--- linux-sh4-2.6.23.17_stm23_0123/arch/sh/kernel/cpu/sh4/setup-stx7105.c	2011-05-16 17:16:51.883867611 +0800
*************** static struct lirc_pio stx7105_lirc_pios
*** 1197,1213 ****
  		.bank = 3,
  		.pin = 1,
  		.dir = STPIO_IN,
! 		.pinof = 0x00 | LIRC_UHF_RX | LIRC_PIO_ON
  	}, {
  		.bank = 3,
  		.pin = 2,
  		.dir = STPIO_ALT_OUT,
! 		.pinof = 0x00 | LIRC_IR_TX | LIRC_PIO_ON
  	}, {
  		.bank = 3,
  		.pin = 3,
  		.dir = STPIO_ALT_OUT,
! 		.pinof = 0x00 | LIRC_IR_TX | LIRC_PIO_ON
  	},
  };
  
--- 1197,1213 ----
  		.bank = 3,
  		.pin = 1,
  		.dir = STPIO_IN,
! 		.pinof = 0x00 | LIRC_UHF_RX //| LIRC_PIO_ON
  	}, {
  		.bank = 3,
  		.pin = 2,
  		.dir = STPIO_ALT_OUT,
! 		.pinof = 0x00 | LIRC_IR_TX //| LIRC_PIO_ON
  	}, {
  		.bank = 3,
  		.pin = 3,
  		.dir = STPIO_ALT_OUT,
! 		.pinof = 0x00 | LIRC_IR_TX //| LIRC_PIO_ON
  	},
  };
  
*************** static struct platform_device stx7105_em
*** 1635,1641 ****
  static struct platform_device stx7105_lpc =
  	STLPC_DEVICE(0xfd008000, ILC_EXT_IRQ(7), IRQ_TYPE_EDGE_FALLING,
  			0, 1, "CLKB_LPC");
!   
  
  
  /* Early devices initialization ------------------------------------------- */
--- 1635,1641 ----
  static struct platform_device stx7105_lpc =
  	STLPC_DEVICE(0xfd008000, ILC_EXT_IRQ(7), IRQ_TYPE_EDGE_FALLING,
  			0, 1, "CLKB_LPC");
! 
  
  
  /* Early devices initialization ------------------------------------------- */
diff -pcr linux-sh4-2.6.23.17_stm23_0123_setup/arch/sh/kernel/setup.c linux-sh4-2.6.23.17_stm23_0123/arch/sh/kernel/setup.c
*** linux-sh4-2.6.23.17_stm23_0123_setup/arch/sh/kernel/setup.c	2011-05-16 15:45:01.763721268 +0800
--- linux-sh4-2.6.23.17_stm23_0123/arch/sh/kernel/setup.c	2011-05-16 17:16:51.884946550 +0800
*************** void __init setup_arch(char **cmdline_p)
*** 276,281 ****
--- 276,309 ----
  #endif
  #endif
  
+ 	{
+ 	char org_command_line[] = "console=ttyAS0,115200 root=/dev/mtdblock3";
+ 	char tdt_command_line[] = "console=ttyAS0,115200 root=/dev/mtdblock4 rw rootfstype=jffs2 init=/bin/devinit coprocessor_mem=4m@0x40000000,4m@0x40400000 printk=1 stmmaceth=ethaddr:";
+ 	char mac[] = "00:00:00:00:00:00";
+ 	int command_line_len = strlen(command_line);
+ 	int org_command_line_len = strlen(org_command_line);
+ 
+ 	if(command_line_len >= org_command_line_len && !strncmp(command_line, org_command_line, org_command_line_len))
+ 	{
+ 		int i;
+ 		for(i = 0; i < (command_line_len - 7); i++)
+ 		{
+ 			if(!strncmp(command_line + i, "ethaddr", 7))
+ 			{
+ 				strlcpy(mac, command_line + i + 8, sizeof(mac));
+ 				break;
+ 			}
+ 			if(!strncmp(command_line + i, "hwaddr", 6))
+ 			{
+ 				strlcpy(mac, command_line + i + 7, sizeof(mac));
+ 				break;
+ 			}
+ 		}
+ 		strlcpy(command_line, tdt_command_line, sizeof(command_line));
+ 		strlcat(command_line, mac, sizeof(command_line));
+ 	}
+ 	}
+ 
  	/* Save unparsed command line copy for /proc/cmdline */
  	memcpy(boot_command_line, command_line, COMMAND_LINE_SIZE);
  	*cmdline_p = command_line;
Only in linux-sh4-2.6.23.17_stm23_0123: .config.old
diff -pcr linux-sh4-2.6.23.17_stm23_0123_setup/drivers/net/stmmac/common.h linux-sh4-2.6.23.17_stm23_0123/drivers/net/stmmac/common.h
*** linux-sh4-2.6.23.17_stm23_0123_setup/drivers/net/stmmac/common.h	2011-05-16 15:44:50.430625954 +0800
--- linux-sh4-2.6.23.17_stm23_0123/drivers/net/stmmac/common.h	2011-05-16 17:16:51.886899788 +0800
*************** static inline void stmmac_set_mac_addr(u
*** 207,232 ****
  	return;
  }
  
  /*
   * This function gets the hardware MAC address
   */
  static inline void stmmac_get_mac_addr(unsigned long ioaddr,
  				unsigned char *addr, unsigned int high,
! 				unsigned int low)
  {
! 	unsigned int hi_addr, lo_addr;
! 
! 	/* Read the MAC address from the hardware */
! 	hi_addr = readl(ioaddr + high);
! 	lo_addr = readl(ioaddr + low);
! 
! 	/* Extract the MAC address from the high and low words */
! 	addr[0] = lo_addr & 0xff;
! 	addr[1] = (lo_addr >> 8) & 0xff;
! 	addr[2] = (lo_addr >> 16) & 0xff;
! 	addr[3] = (lo_addr >> 24) & 0xff;
! 	addr[4] = hi_addr & 0xff;
! 	addr[5] = (hi_addr >> 8) & 0xff;
  
  	return;
  }
--- 207,238 ----
  	return;
  }
  
+ static inline unsigned char hex(char ch)
+ {
+ 	if (ch >= 'a' && ch <= 'f')
+ 		return ch-'a'+10;
+ 	if (ch >= 'A' && ch <= 'F')
+ 		return ch-'A'+10;
+ 	if (ch >= '0' && ch <= '9')
+ 		return ch-'0';
+ 	return -1;
+ }
+ 
  /*
   * This function gets the hardware MAC address
   */
  static inline void stmmac_get_mac_addr(unsigned long ioaddr,
  				unsigned char *addr, unsigned int high,
! 				unsigned int low, char* ethaddr)
  {
! 	int i, j;
! 	for(i = 0, j = 0; i < 6; i++)
! 	{
! 		addr[i] = (hex(ethaddr[j])<<4) + hex(ethaddr[j + 1]);
! 		j += 3;
! 	}
! 	printk("PARSE CMDLINE: %s\n", ethaddr);
! 	printk("ETHADDR: %02X:%02X:%02X:%02X:%02X:%02X\n", addr[0], addr[1], addr[2], addr[3], addr[4], addr[5]);
  
  	return;
  }
*************** struct device_ops {
*** 296,302 ****
  	void (*set_umac_addr) (unsigned long ioaddr, unsigned char *addr,
  			     unsigned int reg_n);
  	void (*get_umac_addr) (unsigned long ioaddr, unsigned char *addr,
! 			     unsigned int reg_n);
  };
  
  struct mac_link {
--- 302,308 ----
  	void (*set_umac_addr) (unsigned long ioaddr, unsigned char *addr,
  			     unsigned int reg_n);
  	void (*get_umac_addr) (unsigned long ioaddr, unsigned char *addr,
! 			     unsigned int reg_n, char* ethaddr);
  };
  
  struct mac_link {
diff -pcr linux-sh4-2.6.23.17_stm23_0123_setup/drivers/net/stmmac/gmac.c linux-sh4-2.6.23.17_stm23_0123/drivers/net/stmmac/gmac.c
*** linux-sh4-2.6.23.17_stm23_0123_setup/drivers/net/stmmac/gmac.c	2011-05-16 15:44:50.430625954 +0800
--- linux-sh4-2.6.23.17_stm23_0123/drivers/net/stmmac/gmac.c	2011-05-16 17:16:51.887867261 +0800
*************** static void gmac_set_umac_addr(unsigned 
*** 414,423 ****
  }
  
  static void gmac_get_umac_addr(unsigned long ioaddr, unsigned char *addr,
! 				unsigned int reg_n)
  {
  	stmmac_get_mac_addr(ioaddr, addr, GMAC_ADDR_HIGH(reg_n),
! 				GMAC_ADDR_LOW(reg_n));
  }
  
  #ifdef STMMAC_VLAN_TAG_USED
--- 414,423 ----
  }
  
  static void gmac_get_umac_addr(unsigned long ioaddr, unsigned char *addr,
! 				unsigned int reg_n, char* ethaddr)
  {
  	stmmac_get_mac_addr(ioaddr, addr, GMAC_ADDR_HIGH(reg_n),
! 				GMAC_ADDR_LOW(reg_n), ethaddr);
  }
  
  #ifdef STMMAC_VLAN_TAG_USED
diff -pcr linux-sh4-2.6.23.17_stm23_0123_setup/drivers/net/stmmac/mac100.c linux-sh4-2.6.23.17_stm23_0123/drivers/net/stmmac/mac100.c
*** linux-sh4-2.6.23.17_stm23_0123_setup/drivers/net/stmmac/mac100.c	2011-05-16 15:44:50.430625954 +0800
--- linux-sh4-2.6.23.17_stm23_0123/drivers/net/stmmac/mac100.c	2011-05-16 17:16:51.890004129 +0800
*************** static void mac100_set_umac_addr(unsigne
*** 280,288 ****
  }
  
  static void mac100_get_umac_addr(unsigned long ioaddr, unsigned char *addr,
! 			  unsigned int reg_n)
  {
! 	stmmac_get_mac_addr(ioaddr, addr, MAC_ADDR_HIGH, MAC_ADDR_LOW);
  }
  
  static void mac100_set_filter(struct net_device *dev)
--- 280,288 ----
  }
  
  static void mac100_get_umac_addr(unsigned long ioaddr, unsigned char *addr,
! 			  unsigned int reg_n, char* ethaddr)
  {
! 	stmmac_get_mac_addr(ioaddr, addr, MAC_ADDR_HIGH, MAC_ADDR_LOW, ethaddr);
  }
  
  static void mac100_set_filter(struct net_device *dev)
diff -pcr linux-sh4-2.6.23.17_stm23_0123_setup/drivers/net/stmmac/stmmac_main.c linux-sh4-2.6.23.17_stm23_0123/drivers/net/stmmac/stmmac_main.c
*** linux-sh4-2.6.23.17_stm23_0123_setup/drivers/net/stmmac/stmmac_main.c	2011-05-16 15:44:50.430625954 +0800
--- linux-sh4-2.6.23.17_stm23_0123/drivers/net/stmmac/stmmac_main.c	2011-05-16 17:16:51.891859005 +0800
*************** static int tx_coe = HW_CSUM;
*** 143,148 ****
--- 143,150 ----
  module_param(tx_coe, int, S_IRUGO | S_IWUSR);
  MODULE_PARM_DESC(tx_coe, "GMAC COE type 2 [on/off]");
  
+ static char g_env_mac[] = "00:00:00:00:00:00";
+ 
  static const u32 default_msg_level = (NETIF_MSG_DRV | NETIF_MSG_PROBE |
  				      NETIF_MSG_LINK | NETIF_MSG_IFUP |
  				      NETIF_MSG_IFDOWN | NETIF_MSG_TIMER);
*************** static int stmmac_probe(struct net_devic
*** 1883,1889 ****
  	dev->weight = 64;
  
  	/* Get the MAC address */
! 	priv->mac_type->ops->get_umac_addr(dev->base_addr, dev->dev_addr, 0);
  	stmmac_init_coalescence(priv->is_gmac, dev->mtu);
  
  	if (!is_valid_ether_addr(dev->dev_addr)) {
--- 1885,1891 ----
  	dev->weight = 64;
  
  	/* Get the MAC address */
! 	priv->mac_type->ops->get_umac_addr(dev->base_addr, dev->dev_addr, 0, g_env_mac);
  	stmmac_init_coalescence(priv->is_gmac, dev->mtu);
  
  	if (!is_valid_ether_addr(dev->dev_addr)) {
*************** static int __init stmmac_cmdline_opt(cha
*** 2348,2353 ****
--- 2350,2358 ----
  			tmrate = simple_strtoul(opt + 7, NULL, 0);
  #endif
  		}
+ 		else if( !strncmp(opt,"ethaddr:", 8)) {
+ 			memcpy(g_env_mac, opt + 8, 17);
+ 		}
  	}
  	return 0;
  }
*** linux-sh4-2.6.23.17_stm23_0123.orig/arch/sh/kernel/setup.c	2011-11-23 22:41:04.009168798 +0200
--- linux-sh4/arch/sh/kernel/setup.c	2011-11-23 22:38:14.000000000 +0200
***************
*** 276,281 ****
--- 276,305 ----
  #endif
  #endif
  
+ 	{
+ 		/* spider: remove bigphysarea allocation from command line */
+ 		int i;
+ 		int command_line_len = strlen(command_line);
+ 
+ 		for(i = 0; i < (command_line_len-11); i++)
+ 		{
+ 			if(!strncmp(command_line + i + 1, "bigphysarea", 11))
+ 			{
+ 				// search for next pos
+ 				int k;
+ 				int pos=command_line_len;
+ 				for(k=i+1; k<command_line_len; k++)
+ 					if(command_line[k]==' ') {
+ 						pos=k;
+ 						break;
+ 					}
+ 				memmove(command_line+i, command_line+pos, command_line_len-pos);
+ 				memset(&command_line[command_line_len-(pos-i)], '\0', pos-i);
+ 				break;
+ 			}
+ 		}
+ 	}
+ 
  	/* Save unparsed command line copy for /proc/cmdline */
  	memcpy(boot_command_line, command_line, COMMAND_LINE_SIZE);
  	*cmdline_p = command_line;
