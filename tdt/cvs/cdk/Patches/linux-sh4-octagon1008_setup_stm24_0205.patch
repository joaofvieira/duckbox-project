--- linux-sh4/arch/sh/boards/mach-mb411/setup.c.orig	2011-06-17 16:10:40.000000000 +0200
+++ linux-sh4/arch/sh/boards/mach-mb411/setup.c	2011-07-05 16:41:13.000000000 +0200
@@ -16,8 +16,11 @@
 #include <linux/phy.h>
 #include <linux/mtd/mtd.h>
 #include <linux/mtd/physmap.h>
+#include <linux/mtd/partitions.h>
+#include <linux/bpa2.h>
 #include <linux/stm/platform.h>
 #include <linux/stm/stx7100.h>
+#include <linux/stm/pio.h>
 #include <sound/stm.h>
 #include <asm/io.h>
 #include <mach/epld.h>
@@ -25,8 +28,25 @@
 #include <asm/irq-stx7100.h>
 #include <mach/common.h>

+const char *LMI_VID_partalias[] = { "BPA2_Region1", "coredisplay-video", "gfx-memory", "v4l2-video-buffers", NULL };
+const char *LMI_SYS_partalias[] = { "BPA2_Region0", "bigphysarea", "v4l2-coded-video-buffers", NULL };

-
+static struct bpa2_partition_desc bpa2_parts_table[] = {
+	{
+		.name  = "LMI_VID",
+		.start = 0x10800000,
+		.size  = 0x03800000,
+		.flags = 0,
+		.aka   = LMI_VID_partalias
+	},
+	{
+		.name  = "LMI_SYS",
+		.start = 0,
+		.size  = 0x00F00000,
+		.flags = 0,
+		.aka   = LMI_SYS_partalias
+	}
+};

 static void __init mb411_setup(char** cmdline_p)
 {
@@ -37,22 +57,22 @@
 	stx7100_configure_asc(2, &(struct stx7100_asc_config) {
 			.hw_flow_control = 1,
 			.is_console = 1, });
-	stx7100_configure_asc(3, &(struct stx7100_asc_config) {
+/*	stx7100_configure_asc(3, &(struct stx7100_asc_config) {
 			.hw_flow_control = 1,
-			.is_console = 0, });
-}
-
+			.is_console = 0, });*/

+	bpa2_init(bpa2_parts_table, ARRAY_SIZE(bpa2_parts_table));
+}

 static struct resource mb411_smc91x_resources[] = {
 	[0] = {
-		.start	= 0x03e00300,
-		.end	= 0x03e00300 + 0xff,
+		.start	= 0xa2000300,
+		.end	= 0xa2000300 + 0xff,
 		.flags	= IORESOURCE_MEM,
 	},
 	[1] = {
-		.start	= 7,
-		.end	= 7,
+		.start	=7,
+		.end	=7,
 		.flags	= IORESOURCE_IRQ,
 	},
 };
@@ -72,32 +92,73 @@
 	 * Bit 1: Reset (not used in later EPLD versions)
 	 */

-	if (vpp) {
+	/*if (vpp) {
 		epld_write(3, EPLD_FLASH);
 	} else {
 		epld_write(2, EPLD_FLASH);
-	}
+	}*/
 }

-static struct platform_device mb411_physmap_flash = {
-	.name		= "physmap-flash",
-	.id		= -1,
-	.num_resources	= 1,
-	.resource	= (struct resource[]) {
-		STM_PLAT_RESOURCE_MEM(0, 32*1024*1024),
+static struct mtd_partition mtd_parts_table[] = {
+	{
+		.name = "Boot Firmware",
+		.size =   0x00020000,	//u-boot 0x00000000-0xa001ffff  128k
+		.offset = 0x00000000,
 	},
-	.dev.platform_data = &(struct physmap_flash_data) {
-		.width		= 2,
-		.set_vpp	= mb411_mtd_set_vpp,
+	{
+		.name = "Kernel",
+		.size =   0x00200000,	//kernel 0x40000-0x23ffff 2MB
+		.offset = 0x00040000,
+	},
+	{
+		.name = "ROOT SQUASHFS",
+		.size =   0x00a00000, //root 0x240000-0xc3ffff 10,0MB
+		.offset = 0x00240000,
+ 	},
+	{
+		.name = "VAR-JFFS2",
+		.size =   0x013C0000,  //0xa40000-0x1dfffff 19,5MB
+		.offset = 0x00C40000,
+	},
+	{
+		.name = "Boot Config",
+		.size =   0x00020000,	//boot config 0xa0020000-0xa003ffff  128k
+		.offset = 0x00020000,
 	},
+	{
+		.name = "Full without bootloader",
+		.size =   0x01FC0000,
+		.offset = 0x00040000,
+	}
+};
+
+static struct physmap_flash_data physmap_flash_data = {
+	.width		= 2,
+	.set_vpp	= NULL,
+	.nr_parts	= ARRAY_SIZE(mtd_parts_table),
+	.parts		= mtd_parts_table
 };

+static struct resource physmap_flash_resource = {
+	.start		= 0x00000000,
+	.end		= 0x01000000 - 1,
+	.flags		= IORESOURCE_MEM,
+};

+static struct platform_device mb411_physmap_flash = {
+	.name		= "physmap-flash",
+	.id		= -1,
+	.dev	= {
+		.platform_data = &physmap_flash_data,
+	},
+	.num_resources	= 1,
+	.resource	= &physmap_flash_resource,
+};

 static struct plat_stmmacphy_data mb411_phy_private_data = {
 	.bus_id = 0,
-	.phy_addr = -1,
-	.phy_mask = 0,
+	.phy_addr =-1,
+	.phy_mask =0,
 	.interface = PHY_INTERFACE_MODE_MII,
 };

@@ -108,8 +169,8 @@
 	.resource       = (struct resource[]) {
 		{
 			.name   = "phyirq",
-			.start  = 0,
-			.end    = 0,
+			.start	=0,
+			.end	=0,
 			.flags  = IORESOURCE_IRQ,
 		},
 	},
@@ -158,20 +219,20 @@


 static struct platform_device *mb411_devices[] __initdata = {
-	&mb411_epld_device,
+	 &mb411_epld_device,
 	&mb411_smc91x_device,
 	&mb411_physmap_flash,
 	&mb411_phy_device,
-	&mb411_snd_ext_dacs,
+	//&mb411_snd_ext_dacs,
 };

 static int __init mb411_device_init(void)
 {
 	stx7100_configure_sata();

-	stx7100_configure_pwm(&(struct stx7100_pwm_config) {
+	/*stx7100_configure_pwm(&(struct stx7100_pwm_config) {
 			.out0_enabled = 1,
-			.out1_enabled = 1, });
+			.out1_enabled = 1, });*/

 	stx7100_configure_ssc_i2c(0);
 	stx7100_configure_ssc_spi(1, NULL);
@@ -179,26 +240,26 @@

 	stx7100_configure_usb();

-	stx7100_configure_lirc(&(struct stx7100_lirc_config) {
+	/*stx7100_configure_lirc(&(struct stx7100_lirc_config) {
 			.rx_mode = stx7100_lirc_rx_mode_ir,
 			.tx_enabled = 1,
-			.tx_od_enabled = 1, });
+			.tx_od_enabled = 1, });*/

 	stx7100_configure_ethernet(&(struct stx7100_ethernet_config) {
 			.mode = stx7100_ethernet_mode_mii,
-			.ext_clk = 0,
+			.ext_clk = 1,
 			.phy_bus = 0, });

 	/* Set the EPLD ATAPI register to 1, enabling the IDE interface.*/
-	epld_write(1, EPLD_ATAPI);
+	/*epld_write(1, EPLD_ATAPI);
 	stx7100_configure_pata(&(struct stx7100_pata_config) {
 			.emi_bank = 3,
 			.pc_mode = 1,
 			.irq = 8, });

-	/* Initialize audio EPLD */
+	// Initialize audio EPLD
 	epld_write(0x1, EPLD_DAC_PNOTS);
-	epld_write(0x7, EPLD_DAC_SPMUX);
+	epld_write(0x7, EPLD_DAC_SPMUX);*/

 	return platform_add_devices(mb411_devices,
 			ARRAY_SIZE(mb411_devices));
