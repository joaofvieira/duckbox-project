diff -rcN a/include/sound//core.h b/include/sound//core.h
*** a/include/sound//core.h	2007-10-09 22:31:38.000000000 +0200
--- b/include/sound//core.h	2010-12-29 13:03:21.802979479 +0100
***************
*** 451,455 ****
--- 451,456 ----
  const struct snd_pci_quirk *
  snd_pci_quirk_lookup(struct pci_dev *pci, const struct snd_pci_quirk *list);
  
+ int snd_get_minor(int type, int card, int dev);
  
  #endif /* __SOUND_CORE_H */
diff -rcN a/sound//core/oss/pcm_oss.c b/sound//core/oss/pcm_oss.c
*** a/sound//core/oss/pcm_oss.c	2007-10-09 22:31:38.000000000 +0200
--- b/sound//core/oss/pcm_oss.c	2010-12-29 12:31:11.127093411 +0100
***************
*** 203,209 ****
  	return changed;
  }
  
! static int snd_pcm_hw_param_mask(struct snd_pcm_substream *pcm,
  				 struct snd_pcm_hw_params *params,
  				 snd_pcm_hw_param_t var,
  				 const struct snd_mask *val)
--- 203,209 ----
  	return changed;
  }
  
! int snd_pcm_hw_param_mask(struct snd_pcm_substream *pcm,
  				 struct snd_pcm_hw_params *params,
  				 snd_pcm_hw_param_t var,
  				 const struct snd_mask *val)
***************
*** 219,225 ****
  	return 0;
  }
  
! static int _snd_pcm_hw_param_min(struct snd_pcm_hw_params *params,
  				 snd_pcm_hw_param_t var, unsigned int val,
  				 int dir)
  {
--- 219,227 ----
  	return 0;
  }
  
! EXPORT_SYMBOL_GPL(snd_pcm_hw_param_mask);
! 
! int _snd_pcm_hw_param_min(struct snd_pcm_hw_params *params,
  				 snd_pcm_hw_param_t var, unsigned int val,
  				 int dir)
  {
***************
*** 250,255 ****
--- 252,259 ----
  	return changed;
  }
  
+ EXPORT_SYMBOL_GPL(_snd_pcm_hw_param_min);
+ 
  /**
   * snd_pcm_hw_param_min
   * @pcm: PCM instance
***************
*** 397,403 ****
   * SNDRV_PCM_HW_PARAM_FORMAT, SNDRV_PCM_HW_PARAM_SUBFORMAT.
   * Return the value found.
    */
! static int snd_pcm_hw_param_near(struct snd_pcm_substream *pcm,
  				 struct snd_pcm_hw_params *params,
  				 snd_pcm_hw_param_t var, unsigned int best,
  				 int *dir)
--- 401,407 ----
   * SNDRV_PCM_HW_PARAM_FORMAT, SNDRV_PCM_HW_PARAM_SUBFORMAT.
   * Return the value found.
    */
! int snd_pcm_hw_param_near(struct snd_pcm_substream *pcm,
  				 struct snd_pcm_hw_params *params,
  				 snd_pcm_hw_param_t var, unsigned int best,
  				 int *dir)
***************
*** 466,471 ****
--- 470,477 ----
  	return v;
  }
  
+ EXPORT_SYMBOL_GPL(snd_pcm_hw_param_near);
+ 
  static int _snd_pcm_hw_param_set(struct snd_pcm_hw_params *params,
  				 snd_pcm_hw_param_t var, unsigned int val,
  				 int dir)
***************
*** 526,532 ****
   * values != VAL. Reduce configuration space accordingly.
   *  Return VAL or -EINVAL if the configuration space is empty
   */
! static int snd_pcm_hw_param_set(struct snd_pcm_substream *pcm,
  				struct snd_pcm_hw_params *params,
  				snd_pcm_hw_param_t var, unsigned int val,
  				int dir)
--- 532,538 ----
   * values != VAL. Reduce configuration space accordingly.
   *  Return VAL or -EINVAL if the configuration space is empty
   */
! int snd_pcm_hw_param_set(struct snd_pcm_substream *pcm,
  				struct snd_pcm_hw_params *params,
  				snd_pcm_hw_param_t var, unsigned int val,
  				int dir)
***************
*** 542,548 ****
  	return snd_pcm_hw_param_value(params, var, NULL);
  }
  
! static int _snd_pcm_hw_param_setinteger(struct snd_pcm_hw_params *params,
  					snd_pcm_hw_param_t var)
  {
  	int changed;
--- 548,556 ----
  	return snd_pcm_hw_param_value(params, var, NULL);
  }
  
! EXPORT_SYMBOL_GPL(snd_pcm_hw_param_set);
! 
! int _snd_pcm_hw_param_setinteger(struct snd_pcm_hw_params *params,
  					snd_pcm_hw_param_t var)
  {
  	int changed;
***************
*** 554,559 ****
--- 562,569 ----
  	return changed;
  }
  	
+ EXPORT_SYMBOL_GPL(_snd_pcm_hw_param_setinteger);
+ 
  /*
   * plugin
   */
diff -rcN a/sound//core/pcm_lib.c b/sound//core/pcm_lib.c
*** a/sound//core/pcm_lib.c	2010-12-29 12:00:46.000000000 +0100
--- b/sound//core/pcm_lib.c	2010-12-29 12:31:11.159973626 +0100
***************
*** 2128,2130 ****
--- 2128,2133 ----
  }
  
  EXPORT_SYMBOL(snd_pcm_lib_readv);
+ EXPORT_SYMBOL(snd_pcm_tick_prepare);
+ EXPORT_SYMBOL(snd_pcm_update_hw_ptr);
+ EXPORT_SYMBOL(snd_pcm_start);
diff -rcN a/sound//core/pcm_native.c b/sound//core/pcm_native.c
*** a/sound//core/pcm_native.c	2007-10-09 22:31:38.000000000 +0200
--- b/sound//core/pcm_native.c	2010-12-29 12:31:11.194094285 +0100
***************
*** 1932,1937 ****
--- 1932,1940 ----
  	return 0;
  }
  
+ EXPORT_SYMBOL_GPL(snd_pcm_hw_constraints_init);
+ 
+ 
  int snd_pcm_hw_constraints_complete(struct snd_pcm_substream *substream)
  {
  	struct snd_pcm_runtime *runtime = substream->runtime;
***************
*** 2008,2013 ****
--- 2011,2018 ----
  	return 0;
  }
  
+ EXPORT_SYMBOL_GPL(snd_pcm_hw_constraints_complete);
+ 
  static void pcm_release_private(struct snd_pcm_substream *substream)
  {
  	snd_pcm_unlink(substream);
diff -rcN a/sound//core/sound.c b/sound//core/sound.c
*** a/sound//core/sound.c	2010-12-29 12:01:42.000000000 +0100
--- b/sound//core/sound.c	2010-12-29 13:03:31.667227521 +0100
***************
*** 291,296 ****
--- 291,303 ----
  	return -1;
  }
  
+ int snd_get_minor(int type, int card, int dev)
+ {
+ 	return find_snd_minor(type, snd_cards[card], dev);
+ }
+  
+ EXPORT_SYMBOL(snd_get_minor);
+  
  /**
   * snd_unregister_device - unregister the device on the given card
   * @type: the device type, SNDRV_DEVICE_TYPE_XXX
