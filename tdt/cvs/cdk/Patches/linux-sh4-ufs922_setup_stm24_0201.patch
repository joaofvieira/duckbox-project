*** a/arch/sh/boards/mach-mb442/setup.c	2010-04-30 19:33:50.000000000 +0200
--- b/arch/sh/boards/mach-mb442/setup.c	2010-05-03 18:42:32.507100899 +0200
***************
*** 21,26 ****
--- 21,27 ----
  #include <linux/mtd/physmap.h>
  #include <linux/stm/platform.h>
  #include <linux/stm/stx7100.h>
+ #include <linux/bpa2.h>
  #include <asm/irl.h>
  
  
***************
*** 29,35 ****
--- 30,54 ----
  #define MB442_PIO_SMC91X_RESET stm_gpio(2, 6)
  #define MB442_PIO_FLASH_VPP stm_gpio(2, 7)
  
+ const char *LMI_VID_partalias[] = { "BPA2_Region1", "coredisplay-video", "gfx-memory", "v4l2-video-buffers", NULL };
+ const char *LMI_SYS_partalias[] = { "BPA2_Region0", "bigphysarea", "v4l2-coded-video-buffers", NULL };
  
+ static struct bpa2_partition_desc bpa2_parts_table[] = {
+       {
+ 	      .name  = "LMI_VID",
+ 	      .start = 0x10800000,
+ 	      .size  = 0x03800000,
+ 	      .flags = 0,
+ 	      .aka   = LMI_VID_partalias
+       },
+       {
+ 	      .name  = "LMI_SYS",
+ 	      .start = 0,
+ 	      .size  = 0x01600000,
+ 	      .flags = 0,
+ 	      .aka   = LMI_SYS_partalias
+       }
+ };
  
  void __init mb442_setup(char** cmdline_p)
  {
***************
*** 40,48 ****
--- 59,75 ----
  	stx7100_configure_asc(2, &(struct stx7100_asc_config) {
  			.hw_flow_control = 0,
  			.is_console = 1, });
+ 
+  /* Dagobert: ufs922 uses the micom device 
+   * so we dont need uart3
+   */
+ /*
  	stx7100_configure_asc(3, &(struct stx7100_asc_config) {
  			.hw_flow_control = 0,
  			.is_console = 0, });
+ */
+ 
+   	bpa2_init(bpa2_parts_table, ARRAY_SIZE(bpa2_parts_table));
  }
  
  static struct resource mb442_smc91x_resources[] = {
***************
*** 86,98 ****
  
  static int mb442_phy_reset(void* bus)
  {
  	gpio_set_value(MB442_PIO_STE100P_RESET, 1);
  	udelay(1);
  	gpio_set_value(MB442_PIO_STE100P_RESET, 0);
  	udelay(1);
  	gpio_set_value(MB442_PIO_STE100P_RESET, 1);
  
! 	return 1;
  }
  
  static struct plat_stmmacphy_data mb442_phy_private_data = {
--- 113,127 ----
  
  static int mb442_phy_reset(void* bus)
  {
+ /* on ufs922 2.4 is the tuner
  	gpio_set_value(MB442_PIO_STE100P_RESET, 1);
  	udelay(1);
  	gpio_set_value(MB442_PIO_STE100P_RESET, 0);
  	udelay(1);
  	gpio_set_value(MB442_PIO_STE100P_RESET, 1);
  
! */	return 1;
! 
  }
  
  static struct plat_stmmacphy_data mb442_phy_private_data = {
***************
*** 133,139 ****
--- 162,171 ----
  			.out1_enabled = 1, });
  
  	stx7100_configure_ssc_i2c(0);
+ /*
  	stx7100_configure_ssc_spi(1, NULL);
+ */
+ 	stx7100_configure_ssc_i2c(1);
  	stx7100_configure_ssc_i2c(2);
  
  	stx7100_configure_usb();
***************
*** 151,172 ****
  	gpio_request(MB442_PIO_FLASH_VPP, "Flash VPP");
  	gpio_direction_output(MB442_PIO_FLASH_VPP, 0);
  
  	gpio_request(MB442_PIO_STE100P_RESET, "STE100P reset");
  	gpio_direction_output(MB442_PIO_STE100P_RESET, 1);
! 
  	stx7100_configure_ethernet(&(struct stx7100_ethernet_config) {
  			.mode = stx7100_ethernet_mode_mii,
  			.ext_clk = 0,
  			.phy_bus = 0, });
  
! 	/* Reset the SMSC 91C111 Ethernet chip */
  	gpio_request(MB442_PIO_SMC91X_RESET, "SMC91x reset");
  	gpio_direction_output(MB442_PIO_SMC91X_RESET, 0);
  	udelay(1);
  	gpio_set_value(MB442_PIO_SMC91X_RESET, 1);
  	udelay(1);
  	gpio_set_value(MB442_PIO_SMC91X_RESET, 0);
! 
  	return platform_add_devices(mb442_devices,
  			ARRAY_SIZE(mb442_devices));
  }
--- 183,205 ----
  	gpio_request(MB442_PIO_FLASH_VPP, "Flash VPP");
  	gpio_direction_output(MB442_PIO_FLASH_VPP, 0);
  
+ /*
  	gpio_request(MB442_PIO_STE100P_RESET, "STE100P reset");
  	gpio_direction_output(MB442_PIO_STE100P_RESET, 1);
! */
  	stx7100_configure_ethernet(&(struct stx7100_ethernet_config) {
  			.mode = stx7100_ethernet_mode_mii,
  			.ext_clk = 0,
  			.phy_bus = 0, });
  
! 	/* Reset the SMSC 91C111 Ethernet chip 
  	gpio_request(MB442_PIO_SMC91X_RESET, "SMC91x reset");
  	gpio_direction_output(MB442_PIO_SMC91X_RESET, 0);
  	udelay(1);
  	gpio_set_value(MB442_PIO_SMC91X_RESET, 1);
  	udelay(1);
  	gpio_set_value(MB442_PIO_SMC91X_RESET, 0);
! */
  	return platform_add_devices(mb442_devices,
  			ARRAY_SIZE(mb442_devices));
  }
