diff -urN linux-sh4-2.6.23.17_stm23_0123.org/arch/sh/boards/abcom/ipbox55/mach.c linux-sh4-2.6.23.17_stm23_0123/arch/sh/boards/abcom/ipbox55/mach.c
--- linux-sh4-2.6.23.17_stm23_0123.org/arch/sh/boards/abcom/ipbox55/mach.c	1970-01-01 01:00:00.000000000 +0100
+++ linux-sh4-2.6.23.17_stm23_0123/arch/sh/boards/abcom/ipbox55/mach.c	2010-12-07 12:36:32.000000000 +0100
@@ -0,0 +1,60 @@
+/*
+ * arch/sh/boards/st/mb442/mach.c
+ *
+ * Copyright (C) 2005 STMicroelectronics Limited
+ * Author: Stuart Menefy (stuart.menefy@st.com)
+ *
+ * May be copied or modified under the terms of the GNU General Public
+ * License.  See linux/COPYING for more information.
+ *
+ * Machine vector for the STMicroelectronics STb7100 Reference board.
+ */
+
+#include <linux/init.h>
+#include <linux/irq.h>
+#include <asm/system.h>
+#include <asm/io.h>
+#include <asm/machvec.h>
+#include <asm/irq-stb7100.h>
+
+static void __iomem *mb442_ioport_map(unsigned long port, unsigned int size)
+{
+#ifdef CONFIG_BLK_DEV_ST40IDE
+	/*
+	 * The IDE driver appears to use memory addresses with IO port
+	 * calls. This needs fixing.
+	 */
+	return (void __iomem *)port;
+#endif
+
+	/* However picking somewhere safe isn't as easy as you might think.
+	 * I used to use external ROM, but that can cause problems if you are
+	 * in the middle of updating Flash. So I'm now using the processor core
+	 * version register, which is guaranted to be available, and non-writable.
+	 */
+	return (void __iomem *)CCN_PVR;
+}
+
+static void __init mb442_init_irq(void)
+{
+	/* enable individual interrupt mode for externals */
+	plat_irq_setup_pins(IRQ_MODE_IRQ);
+
+	/* Set the ILC to route external interrupts to the the INTC */
+	/* Outputs 0-3 are the interrupt pins, 4-7 are routed to the INTC */
+	/* Inputs sys-irq2 and 3 are unused (pulled high) */
+	ilc_route_external(ILC_EXT_IRQ0, 4, 0);		/* SMC Ethernet */
+	ilc_route_external(ILC_EXT_IRQ1, 5, 0);		/* ATA */
+	ilc_route_external(ILC_EXT_IRQ2, 6, 0);		/* Unused */
+	ilc_route_external(ILC_EXT_MDINT, 7, 0);	/* STe100 PHY */
+}
+
+void __init mb442_setup(char**);
+
+static struct sh_machine_vector mv_mb442 __initmv = {
+	.mv_name		= "AB IP board",
+	.mv_setup		= mb442_setup,
+	.mv_nr_irqs		= NR_IRQS,
+	.mv_init_irq		= mb442_init_irq,
+	.mv_ioport_map		= mb442_ioport_map,
+};
diff -urN linux-sh4-2.6.23.17_stm23_0123.org/arch/sh/boards/abcom/ipbox55/Makefile linux-sh4-2.6.23.17_stm23_0123/arch/sh/boards/abcom/ipbox55/Makefile
--- linux-sh4-2.6.23.17_stm23_0123.org/arch/sh/boards/abcom/ipbox55/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ linux-sh4-2.6.23.17_stm23_0123/arch/sh/boards/abcom/ipbox55/Makefile	2010-09-06 10:29:31.000000000 +0200
@@ -0,0 +1,5 @@
+#
+# Makefile for STMicroelectronics STb7100 Reference board
+#
+
+obj-y := setup.o mach.o
diff -urN linux-sh4-2.6.23.17_stm23_0123.org/arch/sh/boards/abcom/ipbox55/setup.c linux-sh4-2.6.23.17_stm23_0123/arch/sh/boards/abcom/ipbox55/setup.c
--- linux-sh4-2.6.23.17_stm23_0123.org/arch/sh/boards/abcom/ipbox55/setup.c	1970-01-01 01:00:00.000000000 +0100
+++ linux-sh4-2.6.23.17_stm23_0123/arch/sh/boards/abcom/ipbox55/setup.c	2011-06-21 15:38:05.000000000 +0200
@@ -0,0 +1,228 @@
+/*
+ * arch/sh/boards/st/mb442/setup.c
+ *
+ * Copyright (C) 2005 STMicroelectronics Limited
+ * Author: Stuart Menefy (stuart.menefy@st.com)
+ *
+ * May be copied or modified under the terms of the GNU General Public
+ * License.  See linux/COPYING for more information.
+ *
+ * STMicroelectronics STb7100 Reference board support.
+ */
+
+#include <linux/init.h>
+#include <linux/platform_device.h>
+#include <linux/stm/pio.h>
+#include <linux/stm/soc.h>
+#include <linux/spi/spi.h>
+#include <linux/delay.h>
+#include <linux/mtd/mtd.h>
+#include <linux/mtd/physmap.h>
+#include <linux/mtd/partitions.h>
+#include <linux/phy.h>
+#include <linux/lirc.h>
+#include <asm/irl.h>
+#include <linux/bpa2.h>
+
+//static int ascs[2] __initdata = { 2 | (STASC_FLAG_NORTSCTS << 8), 3 | (STASC_FLAG_NORTSCTS << 8) };
+static int ascs[1] __initdata = { 2 | (STASC_FLAG_NORTSCTS << 8) };
+
+const char *LMI_VID_partalias[] = { "BPA2_Region1", "coredisplay-video", "gfx-memory", "v4l2-video-buffers","v4l2-coded-video-buffers", NULL };
+const char *LMI_SYS_partalias[] = { "BPA2_Region0", "bigphysarea", NULL };
+ 
+#ifdef CONFIG_32BIT
+static struct bpa2_partition_desc bpa2_parts_table[] = {
+	{
+		.name  = "LMI_VID",
+		.start = 0x81000000,
+		.size  = 0x07000000,
+		.flags = 0,
+		.aka   = LMI_VID_partalias
+	},
+	{
+		.name  = "LMI_SYS",
+		.start = 0,
+		.size  = 0x05000000,
+		.flags = 0,
+		.aka   = LMI_SYS_partalias
+	}
+};
+#else
+static struct bpa2_partition_desc bpa2_parts_table[] = {
+	{
+		.name  = "LMI_VID",
+		.start = 0x10800000,
+		.size  = 0x03800000,
+		.flags = 0,
+		.aka   = LMI_VID_partalias
+	},
+	{
+		.name  = "LMI_SYS",
+		.start = 0,
+		.size  = 0x01600000,
+		.flags = 0,
+		.aka   = LMI_SYS_partalias
+	}
+};
+#endif /* CONFIG_32BIT */
+
+void __init mb442_setup(char** cmdline_p)
+{
+	printk("Abcom ng board initialisation ...\n");
+
+	stx7100_early_device_init();
+	stb7100_configure_asc(ascs, ARRAY_SIZE(ascs), 0);
+	bpa2_init(bpa2_parts_table, ARRAY_SIZE(bpa2_parts_table));
+}
+
+static struct plat_stm_pwm_data pwm_private_info = {
+	.flags		= PLAT_STM_PWM_OUT0,
+};
+
+static struct plat_ssc_data ssc_private_info = {
+	.capability  =
+		ssc0_has(SSC_I2C_CAPABILITY) |
+		ssc1_has(SSC_I2C_CAPABILITY) |
+		ssc2_has(SSC_I2C_CAPABILITY),
+};
+
+static struct mtd_partition mtd_parts_table[] = {
+	{
+		.name 		= "nor.boot",
+		.offset 	= 0x00000000,
+		.size		= 0x00040000,
+		.mask_flags	= MTD_WRITEABLE,	/* force read-only */
+	},
+	{
+		.name		= "nor.config_welcome",
+		.offset		= 0x00040000,
+		.size		= 0x00020000,
+	},
+	{	.name		= "nor.kernel",
+		.offset		= 0x00060000,
+		.size		= 0x00240000,
+//		.mask_flags	= MTD_WRITEABLE,
+	},
+	{
+		.name		= "nor.root",
+		.offset		= 0x002A0000,
+		.size		= MTDPART_SIZ_FULL,
+	},
+	{
+		.name		= "nor.kernel_root",
+		.offset		= 0x00060000,
+		.size		= 0x03FA0000,
+	},
+};
+
+static struct stpio_pin *vpp_pio;
+
+static void set_vpp(struct map_info *info, int enable)
+{
+	stpio_set_pin(vpp_pio, enable);
+}
+
+static struct physmap_flash_data physmap_flash_data = {
+	.width		= 2,
+	.set_vpp	= set_vpp,
+	.nr_parts	= ARRAY_SIZE(mtd_parts_table),
+	.parts		= mtd_parts_table
+};
+
+static struct resource physmap_flash_resource = {
+	.start		= 0x00000000,
+	.end		= 0x04000000 - 1,
+	.flags		= IORESOURCE_MEM,
+};
+
+static struct platform_device physmap_flash = {
+	.name		= "physmap-flash",
+	.id		= -1,
+	.dev		= {
+		.platform_data	= &physmap_flash_data,
+	},
+	.num_resources	= 1,
+	.resource	= &physmap_flash_resource,
+};
+
+static struct stpio_pin *phy_reset_pin;
+
+static int mb442_phy_reset(void* bus)
+{
+	return 1;
+}
+
+static struct plat_stmmacphy_data phy_private_data = {
+	.bus_id = 0,
+	.phy_addr = 3,
+	.phy_mask = 0,
+	.interface = PHY_INTERFACE_MODE_MII,
+	.phy_reset = &mb442_phy_reset,
+};
+
+static struct platform_device mb442_phy_device = {
+	.name		= "stmmacphy",
+	.id		= 0,
+	.num_resources	= 1,
+	.resource	= (struct resource[]) {
+                {
+			.name	= "phyirq",
+			.start	= IRL3_IRQ,
+			.end	= IRL3_IRQ,
+			.flags	= IORESOURCE_IRQ,
+		},
+	},
+	.dev = {
+		.platform_data = &phy_private_data,
+	 }
+};
+
+static struct platform_device pdiusbd12_device = {
+	.name           = "pdiusbd12",
+	.id             = -1,
+	.num_resources  = 2,
+	.resource       = (struct resource[]) {
+		{
+	                .start = 0xa2000000,
+		        .end   = 0xa200ffff,
+	        	.flags  = IORESOURCE_MEM,
+		},
+		{
+			.name   = "usbirq",
+	        	.start  = IRL0_IRQ,
+	        	.end    = IRL0_IRQ,
+	        	.flags  = IORESOURCE_IRQ,
+		},
+	},
+};
+
+static struct platform_device *mb442_devices[] __initdata = {
+	&physmap_flash,
+	&mb442_phy_device,
+	&pdiusbd12_device,
+};
+
+/* Configuration based on Futarque-RC signals train. */
+lirc_scd_t lirc_scd = {
+	.code = 0x3FFFC028,
+	.codelen = 0x1e,
+	.alt_codelen = 0,
+	.nomtime = 0x1f4,
+	.noiserecov = 0,
+};
+
+static int __init device_init(void)
+{
+	stx7100_configure_sata();
+	stx7100_configure_ssc(&ssc_private_info);
+	stx7100_configure_pwm(&pwm_private_info);
+	stx7100_configure_usb();
+	stx7100_configure_lirc(&lirc_scd);
+	vpp_pio = stpio_request_pin(2, 4, "VPP", STPIO_OUT);
+
+	stx7100_configure_ethernet(0, 0, 0);
+	return platform_add_devices(mb442_devices,
+				    ARRAY_SIZE(mb442_devices));
+}
+
+device_initcall(device_init);
diff -urN linux-sh4-2.6.23.17_stm23_0123.org/arch/sh/boards/abcom/ipbox99/mach.c linux-sh4-2.6.23.17_stm23_0123/arch/sh/boards/abcom/ipbox99/mach.c
--- linux-sh4-2.6.23.17_stm23_0123.org/arch/sh/boards/abcom/ipbox99/mach.c	1970-01-01 01:00:00.000000000 +0100
+++ linux-sh4-2.6.23.17_stm23_0123/arch/sh/boards/abcom/ipbox99/mach.c	2010-12-07 12:36:40.000000000 +0100
@@ -0,0 +1,60 @@
+/*
+ * arch/sh/boards/st/mb442/mach.c
+ *
+ * Copyright (C) 2005 STMicroelectronics Limited
+ * Author: Stuart Menefy (stuart.menefy@st.com)
+ *
+ * May be copied or modified under the terms of the GNU General Public
+ * License.  See linux/COPYING for more information.
+ *
+ * Machine vector for the STMicroelectronics STb7100 Reference board.
+ */
+
+#include <linux/init.h>
+#include <linux/irq.h>
+#include <asm/system.h>
+#include <asm/io.h>
+#include <asm/machvec.h>
+#include <asm/irq-stb7100.h>
+
+static void __iomem *mb442_ioport_map(unsigned long port, unsigned int size)
+{
+#ifdef CONFIG_BLK_DEV_ST40IDE
+	/*
+	 * The IDE driver appears to use memory addresses with IO port
+	 * calls. This needs fixing.
+	 */
+	return (void __iomem *)port;
+#endif
+
+	/* However picking somewhere safe isn't as easy as you might think.
+	 * I used to use external ROM, but that can cause problems if you are
+	 * in the middle of updating Flash. So I'm now using the processor core
+	 * version register, which is guaranted to be available, and non-writable.
+	 */
+	return (void __iomem *)CCN_PVR;
+}
+
+static void __init mb442_init_irq(void)
+{
+	/* enable individual interrupt mode for externals */
+	plat_irq_setup_pins(IRQ_MODE_IRQ);
+
+	/* Set the ILC to route external interrupts to the the INTC */
+	/* Outputs 0-3 are the interrupt pins, 4-7 are routed to the INTC */
+	/* Inputs sys-irq2 and 3 are unused (pulled high) */
+	ilc_route_external(ILC_EXT_IRQ0, 4, 0);		/* SMC Ethernet */
+	ilc_route_external(ILC_EXT_IRQ1, 5, 0);		/* ATA */
+	ilc_route_external(ILC_EXT_IRQ2, 6, 0);		/* Unused */
+	ilc_route_external(ILC_EXT_MDINT, 7, 0);	/* STe100 PHY */
+}
+
+void __init mb442_setup(char**);
+
+static struct sh_machine_vector mv_mb442 __initmv = {
+	.mv_name		= "AB IP board",
+	.mv_setup		= mb442_setup,
+	.mv_nr_irqs		= NR_IRQS,
+	.mv_init_irq		= mb442_init_irq,
+	.mv_ioport_map		= mb442_ioport_map,
+};
diff -urN linux-sh4-2.6.23.17_stm23_0123.org/arch/sh/boards/abcom/ipbox99/Makefile linux-sh4-2.6.23.17_stm23_0123/arch/sh/boards/abcom/ipbox99/Makefile
--- linux-sh4-2.6.23.17_stm23_0123.org/arch/sh/boards/abcom/ipbox99/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ linux-sh4-2.6.23.17_stm23_0123/arch/sh/boards/abcom/ipbox99/Makefile	2010-09-06 10:29:31.000000000 +0200
@@ -0,0 +1,5 @@
+#
+# Makefile for STMicroelectronics STb7100 Reference board
+#
+
+obj-y := setup.o mach.o
diff -urN linux-sh4-2.6.23.17_stm23_0123.org/arch/sh/boards/abcom/ipbox99/setup.c linux-sh4-2.6.23.17_stm23_0123/arch/sh/boards/abcom/ipbox99/setup.c
--- linux-sh4-2.6.23.17_stm23_0123.org/arch/sh/boards/abcom/ipbox99/setup.c	1970-01-01 01:00:00.000000000 +0100
+++ linux-sh4-2.6.23.17_stm23_0123/arch/sh/boards/abcom/ipbox99/setup.c	2011-06-21 08:35:51.000000000 +0200
@@ -0,0 +1,228 @@
+/*
+ * arch/sh/boards/st/mb442/setup.c
+ *
+ * Copyright (C) 2005 STMicroelectronics Limited
+ * Author: Stuart Menefy (stuart.menefy@st.com)
+ *
+ * May be copied or modified under the terms of the GNU General Public
+ * License.  See linux/COPYING for more information.
+ *
+ * STMicroelectronics STb7100 Reference board support.
+ */
+
+#include <linux/init.h>
+#include <linux/platform_device.h>
+#include <linux/stm/pio.h>
+#include <linux/stm/soc.h>
+#include <linux/spi/spi.h>
+#include <linux/delay.h>
+#include <linux/mtd/mtd.h>
+#include <linux/mtd/physmap.h>
+#include <linux/mtd/partitions.h>
+#include <linux/phy.h>
+#include <linux/lirc.h>
+#include <asm/irl.h>
+#include <linux/bpa2.h>
+
+//static int ascs[2] __initdata = { 2 | (STASC_FLAG_NORTSCTS << 8), 3 | (STASC_FLAG_NORTSCTS << 8) };
+static int ascs[1] __initdata = { 2 | (STASC_FLAG_NORTSCTS << 8) };
+
+const char *LMI_VID_partalias[] = { "BPA2_Region1", "coredisplay-video", "gfx-memory", "v4l2-video-buffers", NULL };
+const char *LMI_SYS_partalias[] = { "BPA2_Region0", "bigphysarea","v4l2-coded-video-buffers", NULL };
+ 
+#ifdef CONFIG_32BIT
+static struct bpa2_partition_desc bpa2_parts_table[] = {
+	{
+		.name  = "LMI_VID",
+		.start = 0x81000000,
+		.size  = 0x07000000,
+		.flags = 0,
+		.aka   = LMI_VID_partalias
+	},
+	{
+		.name  = "LMI_SYS",
+		.start = 0,
+		.size  = 0x05000000,
+		.flags = 0,
+		.aka   = LMI_SYS_partalias
+	}
+};
+#else
+static struct bpa2_partition_desc bpa2_parts_table[] = {
+	{
+		.name  = "LMI_VID",
+		.start = 0x10800000,
+		.size  = 0x03800000,
+		.flags = 0,
+		.aka   = LMI_VID_partalias
+	},
+	{
+		.name  = "LMI_SYS",
+		.start = 0x0,
+		.size  = 0x01600000,
+		.flags = 0,
+		.aka   = LMI_SYS_partalias
+	}
+};
+#endif /* CONFIG_32BIT */
+
+void __init mb442_setup(char** cmdline_p)
+{
+	printk("Abcom ng board initialisation ...\n");
+
+	stx7100_early_device_init();
+	stb7100_configure_asc(ascs, ARRAY_SIZE(ascs), 0);
+	bpa2_init(bpa2_parts_table, ARRAY_SIZE(bpa2_parts_table));
+}
+
+static struct plat_stm_pwm_data pwm_private_info = {
+	.flags		= PLAT_STM_PWM_OUT0,
+};
+
+static struct plat_ssc_data ssc_private_info = {
+	.capability  =
+		ssc0_has(SSC_I2C_CAPABILITY) |
+		ssc1_has(SSC_I2C_CAPABILITY) |
+		ssc2_has(SSC_I2C_CAPABILITY),
+};
+
+static struct mtd_partition mtd_parts_table[] = {
+	{
+		.name 		= "nor.boot",
+		.offset 	= 0x00000000,
+		.size		= 0x00040000,
+		.mask_flags	= MTD_WRITEABLE,	/* force read-only */
+	},
+	{
+		.name		= "nor.config_welcome",
+		.offset		= 0x00040000,
+		.size		= 0x00020000,
+	},
+	{	.name		= "nor.kernel",
+		.offset		= 0x00060000,
+		.size		= 0x00240000,
+//		.mask_flags	= MTD_WRITEABLE,
+	},
+	{
+		.name		= "nor.root",
+		.offset		= 0x002A0000,
+		.size		= MTDPART_SIZ_FULL,
+	},
+	{
+		.name		= "nor.kernel_root",
+		.offset		= 0x00060000,
+		.size		= 0x01FA0000,
+	},
+};
+
+static struct stpio_pin *vpp_pio;
+
+static void set_vpp(struct map_info *info, int enable)
+{
+	stpio_set_pin(vpp_pio, enable);
+}
+
+static struct physmap_flash_data physmap_flash_data = {
+	.width		= 2,
+	.set_vpp	= set_vpp,
+	.nr_parts	= ARRAY_SIZE(mtd_parts_table),
+	.parts		= mtd_parts_table
+};
+
+static struct resource physmap_flash_resource = {
+	.start		= 0x00000000,
+	.end		= 0x02000000 - 1,
+	.flags		= IORESOURCE_MEM,
+};
+
+static struct platform_device physmap_flash = {
+	.name		= "physmap-flash",
+	.id		= -1,
+	.dev		= {
+		.platform_data	= &physmap_flash_data,
+	},
+	.num_resources	= 1,
+	.resource	= &physmap_flash_resource,
+};
+
+static struct stpio_pin *phy_reset_pin;
+
+static int mb442_phy_reset(void* bus)
+{
+	return 1;
+}
+
+static struct plat_stmmacphy_data phy_private_data = {
+	.bus_id = 0,
+	.phy_addr = 3,
+	.phy_mask = 1,
+	.interface = PHY_INTERFACE_MODE_MII,
+	.phy_reset = &mb442_phy_reset,
+};
+
+static struct platform_device mb442_phy_device = {
+	.name		= "stmmacphy",
+	.id		= 0,
+	.num_resources	= 1,
+	.resource	= (struct resource[]) {
+                {
+			.name	= "phyirq",
+			.start	= IRL3_IRQ,
+			.end	= IRL3_IRQ,
+			.flags	= IORESOURCE_IRQ,
+		},
+	},
+	.dev = {
+		.platform_data = &phy_private_data,
+	 }
+};
+
+static struct platform_device pdiusbd12_device = {
+	.name           = "pdiusbd12",
+	.id             = -1,
+	.num_resources  = 2,
+	.resource       = (struct resource[]) {
+		{
+	                .start = 0xa2000000,
+		        .end   = 0xa200ffff,
+	        	.flags  = IORESOURCE_MEM,
+		},
+		{
+			.name   = "usbirq",
+	        	.start  = IRL0_IRQ,
+	        	.end    = IRL0_IRQ,
+	        	.flags  = IORESOURCE_IRQ,
+		},
+	},
+};
+
+static struct platform_device *mb442_devices[] __initdata = {
+	&physmap_flash,
+	&mb442_phy_device,
+	&pdiusbd12_device,
+};
+
+/* Configuration based on Futarque-RC signals train. */
+lirc_scd_t lirc_scd = {
+	.code = 0x3FFFC028,
+	.codelen = 0x1e,
+	.alt_codelen = 0,
+	.nomtime = 0x1f4,
+	.noiserecov = 0,
+};
+
+static int __init device_init(void)
+{
+	stx7100_configure_sata();
+	stx7100_configure_ssc(&ssc_private_info);
+	stx7100_configure_pwm(&pwm_private_info);
+	stx7100_configure_usb();
+	stx7100_configure_lirc(&lirc_scd);
+	vpp_pio = stpio_request_pin(2, 4, "VPP", STPIO_OUT);
+
+	stx7100_configure_ethernet(0, 0, 0);
+	return platform_add_devices(mb442_devices,
+				    ARRAY_SIZE(mb442_devices));
+}
+
+device_initcall(device_init);
diff -urN linux-sh4-2.6.23.17_stm23_0123.org/arch/sh/boards/abcom/ipbox9900/mach.c linux-sh4-2.6.23.17_stm23_0123/arch/sh/boards/abcom/ipbox9900/mach.c
--- linux-sh4-2.6.23.17_stm23_0123.org/arch/sh/boards/abcom/ipbox9900/mach.c	1970-01-01 01:00:00.000000000 +0100
+++ linux-sh4-2.6.23.17_stm23_0123/arch/sh/boards/abcom/ipbox9900/mach.c	2010-12-07 12:36:40.000000000 +0100
@@ -0,0 +1,60 @@
+/*
+ * arch/sh/boards/st/mb442/mach.c
+ *
+ * Copyright (C) 2005 STMicroelectronics Limited
+ * Author: Stuart Menefy (stuart.menefy@st.com)
+ *
+ * May be copied or modified under the terms of the GNU General Public
+ * License.  See linux/COPYING for more information.
+ *
+ * Machine vector for the STMicroelectronics STb7100 Reference board.
+ */
+
+#include <linux/init.h>
+#include <linux/irq.h>
+#include <asm/system.h>
+#include <asm/io.h>
+#include <asm/machvec.h>
+#include <asm/irq-stb7100.h>
+
+static void __iomem *mb442_ioport_map(unsigned long port, unsigned int size)
+{
+#ifdef CONFIG_BLK_DEV_ST40IDE
+	/*
+	 * The IDE driver appears to use memory addresses with IO port
+	 * calls. This needs fixing.
+	 */
+	return (void __iomem *)port;
+#endif
+
+	/* However picking somewhere safe isn't as easy as you might think.
+	 * I used to use external ROM, but that can cause problems if you are
+	 * in the middle of updating Flash. So I'm now using the processor core
+	 * version register, which is guaranted to be available, and non-writable.
+	 */
+	return (void __iomem *)CCN_PVR;
+}
+
+static void __init mb442_init_irq(void)
+{
+	/* enable individual interrupt mode for externals */
+	plat_irq_setup_pins(IRQ_MODE_IRQ);
+
+	/* Set the ILC to route external interrupts to the the INTC */
+	/* Outputs 0-3 are the interrupt pins, 4-7 are routed to the INTC */
+	/* Inputs sys-irq2 and 3 are unused (pulled high) */
+	ilc_route_external(ILC_EXT_IRQ0, 4, 0);		/* SMC Ethernet */
+	ilc_route_external(ILC_EXT_IRQ1, 5, 0);		/* ATA */
+	ilc_route_external(ILC_EXT_IRQ2, 6, 0);		/* Unused */
+	ilc_route_external(ILC_EXT_MDINT, 7, 0);	/* STe100 PHY */
+}
+
+void __init mb442_setup(char**);
+
+static struct sh_machine_vector mv_mb442 __initmv = {
+	.mv_name		= "AB IP board",
+	.mv_setup		= mb442_setup,
+	.mv_nr_irqs		= NR_IRQS,
+	.mv_init_irq		= mb442_init_irq,
+	.mv_ioport_map		= mb442_ioport_map,
+};
diff -urN linux-sh4-2.6.23.17_stm23_0123.org/arch/sh/boards/abcom/ipbox9900/Makefile linux-sh4-2.6.23.17_stm23_0123/arch/sh/boards/abcom/ipbox9900/Makefile
--- linux-sh4-2.6.23.17_stm23_0123.org/arch/sh/boards/abcom/ipbox9900/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ linux-sh4-2.6.23.17_stm23_0123/arch/sh/boards/abcom/ipbox9900/Makefile	2010-09-06 10:29:31.000000000 +0200
@@ -0,0 +1,5 @@
+#
+# Makefile for STMicroelectronics STb7100 Reference board
+#
+
+obj-y := setup.o mach.o
diff -urN linux-sh4-2.6.23.17_stm23_0123.org/arch/sh/boards/abcom/ipbox9900/setup.c linux-sh4-2.6.23.17_stm23_0123/arch/sh/boards/abcom/ipbox9900/setup.c
--- linux-sh4-2.6.23.17_stm23_0123.org/arch/sh/boards/abcom/ipbox9900/setup.c	1970-01-01 01:00:00.000000000 +0100
+++ linux-sh4-2.6.23.17_stm23_0123/arch/sh/boards/abcom/ipbox9900/setup.c	2011-06-21 08:35:51.000000000 +0200
@@ -0,0 +1,228 @@
+/*
+ * arch/sh/boards/st/mb442/setup.c
+ *
+ * Copyright (C) 2005 STMicroelectronics Limited
+ * Author: Stuart Menefy (stuart.menefy@st.com)
+ *
+ * May be copied or modified under the terms of the GNU General Public
+ * License.  See linux/COPYING for more information.
+ *
+ * STMicroelectronics STb7100 Reference board support.
+ */
+
+#include <linux/init.h>
+#include <linux/platform_device.h>
+#include <linux/stm/pio.h>
+#include <linux/stm/soc.h>
+#include <linux/spi/spi.h>
+#include <linux/delay.h>
+#include <linux/mtd/mtd.h>
+#include <linux/mtd/physmap.h>
+#include <linux/mtd/partitions.h>
+#include <linux/phy.h>
+#include <linux/lirc.h>
+#include <asm/irl.h>
+#include <linux/bpa2.h>
+
+//static int ascs[2] __initdata = { 2 | (STASC_FLAG_NORTSCTS << 8), 3 | (STASC_FLAG_NORTSCTS << 8) };
+static int ascs[1] __initdata = { 2 | (STASC_FLAG_NORTSCTS << 8) };
+
+const char *LMI_VID_partalias[] = { "BPA2_Region1", "coredisplay-video", "gfx-memory", "v4l2-video-buffers", NULL };
+const char *LMI_SYS_partalias[] = { "BPA2_Region0", "bigphysarea","v4l2-coded-video-buffers", NULL };
+ 
+#ifdef CONFIG_32BIT
+static struct bpa2_partition_desc bpa2_parts_table[] = {
+	{
+		.name  = "LMI_VID",
+		.start = 0x81000000,
+		.size  = 0x07000000,
+		.flags = 0,
+		.aka   = LMI_VID_partalias
+	},
+	{
+		.name  = "LMI_SYS",
+		.start = 0,
+		.size  = 0x05000000,
+		.flags = 0,
+		.aka   = LMI_SYS_partalias
+	}
+};
+#else
+static struct bpa2_partition_desc bpa2_parts_table[] = {
+	{
+		.name  = "LMI_VID",
+		.start = 0x10800000,
+		.size  = 0x03800000,
+		.flags = 0,
+		.aka   = LMI_VID_partalias
+	},
+	{
+		.name  = "LMI_SYS",
+		.start = 0x0,
+		.size  = 0x01600000,
+		.flags = 0,
+		.aka   = LMI_SYS_partalias
+	}
+};
+#endif /* CONFIG_32BIT */
+
+void __init mb442_setup(char** cmdline_p)
+{
+	printk("Abcom ng board initialisation ...\n");
+
+	stx7100_early_device_init();
+	stb7100_configure_asc(ascs, ARRAY_SIZE(ascs), 0);
+	bpa2_init(bpa2_parts_table, ARRAY_SIZE(bpa2_parts_table));
+}
+
+static struct plat_stm_pwm_data pwm_private_info = {
+	.flags		= PLAT_STM_PWM_OUT0,
+};
+
+static struct plat_ssc_data ssc_private_info = {
+	.capability  =
+		ssc0_has(SSC_I2C_CAPABILITY) |
+		ssc1_has(SSC_I2C_CAPABILITY) |
+		ssc2_has(SSC_I2C_CAPABILITY),
+};
+
+static struct mtd_partition mtd_parts_table[] = {
+	{
+		.name 		= "nor.boot",
+		.offset 	= 0x00000000,
+		.size		= 0x00040000,
+		.mask_flags	= MTD_WRITEABLE,	/* force read-only */
+	},
+	{
+		.name		= "nor.config_welcome",
+		.offset		= 0x00040000,
+		.size		= 0x00020000,
+	},
+	{	.name		= "nor.kernel",
+		.offset		= 0x00060000,
+		.size		= 0x00240000,
+//		.mask_flags	= MTD_WRITEABLE,
+	},
+	{
+		.name		= "nor.root",
+		.offset		= 0x002A0000,
+		.size		= MTDPART_SIZ_FULL,
+	},
+	{
+		.name		= "nor.kernel_root",
+		.offset		= 0x00060000,
+		.size		= 0x01FA0000,
+	},
+};
+
+static struct stpio_pin *vpp_pio;
+
+static void set_vpp(struct map_info *info, int enable)
+{
+	stpio_set_pin(vpp_pio, enable);
+}
+
+static struct physmap_flash_data physmap_flash_data = {
+	.width		= 2,
+	.set_vpp	= set_vpp,
+	.nr_parts	= ARRAY_SIZE(mtd_parts_table),
+	.parts		= mtd_parts_table
+};
+
+static struct resource physmap_flash_resource = {
+	.start		= 0x00000000,
+	.end		= 0x02000000 - 1,
+	.flags		= IORESOURCE_MEM,
+};
+
+static struct platform_device physmap_flash = {
+	.name		= "physmap-flash",
+	.id		= -1,
+	.dev		= {
+		.platform_data	= &physmap_flash_data,
+	},
+	.num_resources	= 1,
+	.resource	= &physmap_flash_resource,
+};
+
+static struct stpio_pin *phy_reset_pin;
+
+static int mb442_phy_reset(void* bus)
+{
+	return 1;
+}
+
+static struct plat_stmmacphy_data phy_private_data = {
+	.bus_id = 0,
+	.phy_addr = 3,
+	.phy_mask = 1,
+	.interface = PHY_INTERFACE_MODE_MII,
+	.phy_reset = &mb442_phy_reset,
+};
+
+static struct platform_device mb442_phy_device = {
+	.name		= "stmmacphy",
+	.id		= 0,
+	.num_resources	= 1,
+	.resource	= (struct resource[]) {
+                {
+			.name	= "phyirq",
+			.start	= IRL3_IRQ,
+			.end	= IRL3_IRQ,
+			.flags	= IORESOURCE_IRQ,
+		},
+	},
+	.dev = {
+		.platform_data = &phy_private_data,
+	 }
+};
+
+static struct platform_device pdiusbd12_device = {
+	.name           = "pdiusbd12",
+	.id             = -1,
+	.num_resources  = 2,
+	.resource       = (struct resource[]) {
+		{
+	                .start = 0xa2000000,
+		        .end   = 0xa200ffff,
+	        	.flags  = IORESOURCE_MEM,
+		},
+		{
+			.name   = "usbirq",
+	        	.start  = IRL0_IRQ,
+	        	.end    = IRL0_IRQ,
+	        	.flags  = IORESOURCE_IRQ,
+		},
+	},
+};
+
+static struct platform_device *mb442_devices[] __initdata = {
+	&physmap_flash,
+	&mb442_phy_device,
+	&pdiusbd12_device,
+};
+
+/* Configuration based on Futarque-RC signals train. */
+lirc_scd_t lirc_scd = {
+	.code = 0x3FFFC028,
+	.codelen = 0x1e,
+	.alt_codelen = 0,
+	.nomtime = 0x1f4,
+	.noiserecov = 0,
+};
+
+static int __init device_init(void)
+{
+	stx7100_configure_sata();
+	stx7100_configure_ssc(&ssc_private_info);
+	stx7100_configure_pwm(&pwm_private_info);
+	stx7100_configure_usb();
+	stx7100_configure_lirc(&lirc_scd);
+	vpp_pio = stpio_request_pin(2, 4, "VPP", STPIO_OUT);
+
+	stx7100_configure_ethernet(0, 0, 0);
+	return platform_add_devices(mb442_devices,
+				    ARRAY_SIZE(mb442_devices));
+}
+
+device_initcall(device_init);
diff -urN linux-sh4-2.6.23.17_stm23_0123.org/arch/sh/Kconfig linux-sh4-2.6.23.17_stm23_0123/arch/sh/Kconfig
--- linux-sh4-2.6.23.17_stm23_0123.org/arch/sh/Kconfig	2011-07-17 06:05:27.000000000 +0200
+++ linux-sh4-2.6.23.17_stm23_0123/arch/sh/Kconfig	2011-07-17 06:22:21.711309505 +0200
@@ -712,6 +712,29 @@
 	  Select MB839 if configuring for an
 	  STMicroelectronics STi7105 MB839 Reference Board.
 
+comment "Ipbox Boards"
+
+config SH_IPBOX9900
+	bool "ipbox9900: STB7100 Abcom board"
+	depends on CPU_SUBTYPE_STB7100
+	help
+	  Select STB7100 ipbox 9900 if configuring for an
+          STMicroelectronics ST7100 MB411 Reference Board.
+
+config SH_IPBOX99
+	bool "ipbox99: STB7100 Abcom board"
+	depends on CPU_SUBTYPE_STB7100
+	help
+	  Select STB7100 ipbox 99 if configuring for an
+          STMicroelectronics ST7100 MB411 Reference Board.
+
+config SH_IPBOX55
+	bool "ipbox55: STB7100 Abcom board"
+	depends on CPU_SUBTYPE_STB7100
+	help
+	  Select STB7100 ipbox 55 if configuring for an
+          STMicroelectronics ST7100 MB411 Reference Board.
+
 comment "ST Peripheral Boards"
 
 config SH_ST_DB641
diff -urN linux-sh4-2.6.23.17_stm23_0123.org/arch/sh/kernel/cpu/sh4/setup-stb7100.c linux-sh4-2.6.23.17_stm23_0123/arch/sh/kernel/cpu/sh4/setup-stb7100.c
--- linux-sh4-2.6.23.17_stm23_0123.org/arch/sh/kernel/cpu/sh4/setup-stb7100.c	2011-07-17 06:08:56.000000000 +0200
+++ linux-sh4-2.6.23.17_stm23_0123/arch/sh/kernel/cpu/sh4/setup-stb7100.c	2011-07-17 06:36:42.739150819 +0200
@@ -126,8 +126,16 @@
 	 * option to select an inverted output from the TPS2052, so no
 	 * software work around is required.)
 	 */
+#if defined (CONFIG_SH_IPBOX9900)
+	pin = stpio_request_pin(5,7, "USBPWR-R", STPIO_OUT);
+	stpio_set_pin(pin, 1);
+
+	pin = stpio_request_pin(5,5, "USBPWR-F", STPIO_OUT);
+	stpio_set_pin(pin, 1);
+#else
 	pin = stpio_request_pin(5,7, "USBPWR", STPIO_OUT);
 	stpio_set_pin(pin, 1);
+#endif
 
 #ifndef CONFIG_PM
 	sc = sysconf_claim(SYS_CFG, 2, 1, 1, "usb");
diff -urN linux-sh4-2.6.23.17_stm23_0123.org/arch/sh/Makefile linux-sh4-2.6.23.17_stm23_0123/arch/sh/Makefile
--- linux-sh4-2.6.23.17_stm23_0123.org/arch/sh/Makefile	2011-07-17 06:05:27.000000000 +0200
+++ linux-sh4-2.6.23.17_stm23_0123/arch/sh/Makefile	2011-07-17 06:25:40.190651011 +0200
@@ -157,6 +157,9 @@
 machdir-$(CONFIG_SH_ST_5197CAB)			+= st/5197cab
 machdir-$(CONFIG_SH_ST_MB837)			+= st/mb837
 machdir-$(CONFIG_SH_ST_MB839)			+= st/mb839
+machdir-$(CONFIG_SH_IPBOX9900)			+= abcom/ipbox9900
+machdir-$(CONFIG_SH_IPBOX99)			+= abcom/ipbox99
+machdir-$(CONFIG_SH_IPBOX55)			+= abcom/ipbox55
 
 incdir-y	:= $(notdir $(firstword $(machdir-y)))
 
diff -urN linux-sh4-2.6.23.17_stm23_0123.org/drivers/net/stmmac/Kconfig linux-sh4-2.6.23.17_stm23_0123/drivers/net/stmmac/Kconfig
--- linux-sh4-2.6.23.17_stm23_0123.org/drivers/net/stmmac/Kconfig	2011-07-17 06:05:26.000000000 +0200
+++ linux-sh4-2.6.23.17_stm23_0123/drivers/net/stmmac/Kconfig	2011-07-17 06:33:02.851174687 +0200
@@ -2,7 +2,7 @@
 	tristate "STMicroelectronics 10/100/1000 Ethernet driver"
 	select MII
 	select PHYLIB
-	depends on NETDEVICES && CPU_SUBTYPE_ST40
+	depends on NETDEVICES && (CPU_SUBTYPE_ST40 || SH_IPBOX9900 || SH_IPBOX99 || SH_IPBOX55 )
 	help
 	  This is the driver for the MAC 10/100/1000 on-chip Ethernet
 	  controllers (Synopsys Core).
diff -urN linux-sh4-2.6.23.17_stm23_0123.org/arch/sh/kernel/cpu/sh4/setup-stb7100.c linux-sh4-2.6.23.17_stm23_0123/arch/sh/kernel/cpu/sh4/setup-stb7100.c
--- linux-sh4-2.6.23.17_stm23_0123.org/arch/sh/kernel/cpu/sh4/setup-stb7100.c	2011-07-25 06:31:48.000000000 +0200
+++ linux-sh4-2.6.23.17_stm23_0123/arch/sh/kernel/cpu/sh4/setup-stb7100.c	2011-07-25 19:49:37.639314737 +0200
@@ -600,6 +600,7 @@
 		.dir  = STPIO_IN,
                 .pinof= 0x00 | LIRC_IR_RX | LIRC_PIO_ON
 	},
+#if 0
 	[1] = {
 		.bank = 3,
 		.pin  = 4,
@@ -618,6 +619,7 @@
 		.dir  = STPIO_ALT_OUT,
                 .pinof= 0x00 | LIRC_IR_TX /* | LIRC_PIO_ON not available */
 	}
+#endif
 };
 
 static struct plat_lirc_data lirc_private_info = {
